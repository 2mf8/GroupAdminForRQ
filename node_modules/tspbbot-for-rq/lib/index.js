"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
exports.__esModule = true;
exports.Bot = exports.createBotServer = exports.Msg = exports.EventHandler = void 0;
var EventHandler_1 = require("./bot/EventHandler");
__createBinding(exports, EventHandler_1, "EventHandler");
var Msg_1 = require("./util/Msg");
__createBinding(exports, Msg_1, "Msg");
var BotWsServer_1 = require("./server/BotWsServer");
__createBinding(exports, BotWsServer_1, "createBotServer");
var Bot_1 = require("./bot/Bot");
__createBinding(exports, Bot_1, "Bot");
/*import { EventHandler } from "./bot/EventHandler";
import { createBotServer } from "./server/BotWsServer";
import { Msg } from "./util/Msg";

let port = 8081

console.log("开始启动")

EventHandler.handleConnect = async (bot) => {
  console.log(`机器人已连接: ${bot.botId.toString()}`)
}

EventHandler.handleDisconnect = async (bot) => {
  console.log(`机器人已断开: ${bot.botId.toString()}`)
}

EventHandler.handlePrivateMessage = async (bot, event) => {
  let rawMsg = event?.rawMessage
  let userId = event?.userId
  if (userId != undefined) {
    console.log(`收到私聊消息，发送者: ${userId.toString()}，内容: ${rawMsg}`)
    await bot.sendPrivateMessage(userId, "hello world")
  }
}

EventHandler.handleGroupMessage = async (bot, event) => {
  let rawMsg = event?.rawMessage
  let userId = event?.userId
  let groupId = event?.groupId
  let message_id = event?.messageId
  if (userId != undefined && groupId != undefined){
    console.log(`收到群聊消息，群号: ${groupId.toString()}，发送者: ${userId.toString()}，内容: ${rawMsg}`)
    if (rawMsg == "撤回" && message_id != undefined){
        await bot.deleteMsg(message_id)
    }
    if (rawMsg !== "hello") return
    let msg = Msg.builder().text("好家伙")
    await bot.sendGroupMessage(groupId, msg)
  }
}

createBotServer(port)

console.log(`启动成功，端口：${port}`)*/
