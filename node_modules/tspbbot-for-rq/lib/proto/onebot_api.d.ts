import * as _m0 from "protobufjs/minimal";
import { Message, MessageReceipt } from "./onebot_base";
export declare const protobufPackage = "onebot";
export interface SendPrivateMsgReq {
    userId: number;
    message: Message[];
    autoEscape: boolean;
}
export interface SendPrivateMsgResp {
    /** int32 message_id = 1; // 废弃 */
    messageId: MessageReceipt | undefined;
}
export interface SendGroupMsgReq {
    groupId: number;
    message: Message[];
    autoEscape: boolean;
}
export interface SendGroupMsgResp {
    /** int32 message_id = 1; // 废弃 */
    messageId: MessageReceipt | undefined;
}
export interface SendMsgReq {
    messageType: string;
    userId: number;
    groupId: number;
    message: Message[];
    autoEscape: boolean;
}
export interface SendMsgResp {
    /** int32 message_id = 1; // 废弃 */
    messageId: MessageReceipt | undefined;
}
export interface DeleteMsgReq {
    /** int32 message_id = 1; */
    messageId: MessageReceipt | undefined;
}
export interface DeleteMsgResp {
}
export interface GetMsgReq {
    messageId: number;
}
export interface GetMsgResp {
    time: number;
    messageType: string;
    messageId: number;
    realId: number;
    sender: GetMsgResp_Sender | undefined;
    message: Message[];
    rawMessage: string;
}
export interface GetMsgResp_Sender {
    userId: number;
    nickname: string;
    card: string;
    sex: string;
    age: number;
    area: string;
    level: string;
    role: string;
    title: string;
}
/** TODO 暂时不支持 */
export interface GetForwardMsgReq {
    id: string;
}
export interface GetForwardMsgResp {
}
export interface SendLikeReq {
    userId: number;
    times: number;
}
export interface SendLikeResp {
}
export interface SetGroupKickReq {
    groupId: number;
    userId: number;
    rejectAddRequest: boolean;
    userIds: number[];
}
export interface SetGroupKickResp {
}
export interface SetGroupBanReq {
    groupId: number;
    userId: number;
    duration: number;
}
export interface SetGroupBanResp {
}
export interface SetGroupAnonymousBanReq {
    groupId: number;
    anonymous: SetGroupAnonymousBanReq_Anonymous | undefined;
    anonymousFlag: string;
    flag: string;
    duration: number;
}
export interface SetGroupAnonymousBanReq_Anonymous {
    id: number;
    name: string;
    flag: string;
}
export interface SetGroupAnonymousBanResp {
}
export interface SetGroupWholeBanReq {
    groupId: number;
    enable: boolean;
}
export interface SetGroupWholeBanResp {
}
export interface SetGroupAdminReq {
    groupId: number;
    userId: number;
    enable: boolean;
}
export interface SetGroupAdminResp {
}
export interface SetGroupAnonymousReq {
    groupId: number;
    enable: boolean;
}
export interface SetGroupAnonymousResp {
}
export interface SetGroupCardReq {
    groupId: number;
    userId: number;
    card: string;
}
export interface SetGroupCardResp {
}
export interface SetGroupNameReq {
    groupId: number;
    groupName: string;
}
export interface SetGroupNameResp {
}
export interface SetGroupLeaveReq {
    groupId: number;
    isDismiss: boolean;
}
export interface SetGroupLeaveResp {
}
export interface SetGroupSpecialTitleReq {
    groupId: number;
    userId: number;
    specialTitle: string;
    duration: number;
}
export interface SetGroupSpecialTitleResp {
}
export interface SetFriendAddRequestReq {
    flag: string;
    approve: boolean;
    remark: string;
}
export interface SetFriendAddRequestResp {
}
export interface SetGroupAddRequestReq {
    flag: string;
    subType: string;
    type: string;
    approve: boolean;
    reason: string;
}
export interface SetGroupAddRequestResp {
}
export interface GetLoginInfoReq {
}
export interface GetLoginInfoResp {
    userId: number;
    nickname: string;
}
export interface GetStrangerInfoReq {
    userId: number;
    noCache: boolean;
}
export interface GetStrangerInfoResp {
    userId: number;
    nickname: string;
    sex: string;
    age: number;
    /** 扩展 */
    level: number;
    /** 扩展 */
    loginDays: number;
}
export interface GetFriendListReq {
}
export interface GetFriendListResp {
    friend: GetFriendListResp_Friend[];
}
export interface GetFriendListResp_Friend {
    userId: number;
    nickname: string;
    remark: string;
}
export interface GetGroupInfoReq {
    groupId: number;
    noCache: boolean;
}
export interface GetGroupInfoResp {
    groupId: number;
    groupName: string;
    memberCount: number;
    maxMemberCount: number;
}
export interface GetGroupListReq {
}
export interface GetGroupListResp {
    group: GetGroupListResp_Group[];
}
export interface GetGroupListResp_Group {
    groupId: number;
    groupName: string;
    memberCount: number;
    maxMemberCount: number;
}
export interface GetGroupMemberInfoReq {
    groupId: number;
    userId: number;
    noCache: boolean;
}
export interface GetGroupMemberInfoResp {
    groupId: number;
    userId: number;
    nickname: string;
    card: string;
    sex: string;
    age: number;
    area: string;
    joinTime: number;
    lastSentTime: number;
    level: string;
    role: string;
    unfriendly: boolean;
    title: string;
    titleExpireTime: number;
    cardChangeable: boolean;
}
export interface GetGroupMemberListReq {
    groupId: number;
}
export interface GetGroupMemberListResp {
    groupMember: GetGroupMemberListResp_GroupMember[];
}
export interface GetGroupMemberListResp_GroupMember {
    groupId: number;
    userId: number;
    nickname: string;
    card: string;
    sex: string;
    age: number;
    area: string;
    joinTime: number;
    lastSentTime: number;
    level: string;
    role: string;
    unfriendly: boolean;
    title: string;
    titleExpireTime: number;
    cardChangeable: boolean;
}
export interface GetGroupHonorInfoReq {
    groupId: number;
    type: string;
}
export interface GetGroupHonorInfoResp {
    groupId: number;
    currentTalkative: GetGroupHonorInfoResp_CurrentTalkative | undefined;
    talkative: GetGroupHonorInfoResp_Honor[];
    performer: GetGroupHonorInfoResp_Honor[];
    legend: GetGroupHonorInfoResp_Honor[];
    strongNewbie: GetGroupHonorInfoResp_Honor[];
    emotion: GetGroupHonorInfoResp_Honor[];
}
export interface GetGroupHonorInfoResp_CurrentTalkative {
    userId: number;
    nickname: string;
    avatar: string;
    dayCount: number;
}
export interface GetGroupHonorInfoResp_Honor {
    userId: number;
    nickname: string;
    avatar: string;
    description: string;
}
export interface GetCookiesReq {
    domain: string;
}
export interface GetCookiesResp {
    cookies: string;
}
export interface GetCsrfTokenReq {
}
export interface GetCsrfTokenResp {
    token: number;
}
export interface GetCredentialsReq {
    domain: string;
}
export interface GetCredentialsResp {
    cookies: string;
    csrfToken: number;
}
export interface GetRecordReq {
    file: string;
    outFormat: string;
}
export interface GetRecordResp {
    file: string;
}
export interface GetImageReq {
    file: string;
}
export interface GetImageResp {
    file: string;
}
export interface CanSendImageReq {
}
export interface CanSendImageResp {
    yes: boolean;
}
export interface CanSendRecordReq {
}
export interface CanSendRecordResp {
    yes: boolean;
}
export interface GetStatusReq {
}
export interface GetStatusResp {
    online: boolean;
    good: boolean;
}
export interface GetVersionInfoReq {
}
export interface GetVersionInfoResp {
    appName: string;
    appVersion: string;
    protocolVersion: string;
    extra: {
        [key: string]: string;
    };
}
export interface GetVersionInfoResp_ExtraEntry {
    key: string;
    value: string;
}
export interface SetRestartReq {
    delay: number;
}
export interface SetRestartResp {
}
export interface CleanCacheReq {
}
export interface CleanCacheResp {
}
export interface SetGroupSignInReq {
    groupId: number;
}
export interface SetGroupSignInResp {
}
export declare const SendPrivateMsgReq: {
    encode(message: SendPrivateMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendPrivateMsgReq;
    fromJSON(object: any): SendPrivateMsgReq;
    toJSON(message: SendPrivateMsgReq): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        autoEscape?: boolean | undefined;
    } & {
        userId?: number | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        autoEscape?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SendPrivateMsgReq>, never>>(object: I): SendPrivateMsgReq;
};
export declare const SendPrivateMsgResp: {
    encode(message: SendPrivateMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendPrivateMsgResp;
    fromJSON(object: any): SendPrivateMsgResp;
    toJSON(message: SendPrivateMsgResp): unknown;
    fromPartial<I extends {
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
    } & {
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
    } & Record<Exclude<keyof I, "messageId">, never>>(object: I): SendPrivateMsgResp;
};
export declare const SendGroupMsgReq: {
    encode(message: SendGroupMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendGroupMsgReq;
    fromJSON(object: any): SendGroupMsgReq;
    toJSON(message: SendGroupMsgReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        autoEscape?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        autoEscape?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SendGroupMsgReq>, never>>(object: I): SendGroupMsgReq;
};
export declare const SendGroupMsgResp: {
    encode(message: SendGroupMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendGroupMsgResp;
    fromJSON(object: any): SendGroupMsgResp;
    toJSON(message: SendGroupMsgResp): unknown;
    fromPartial<I extends {
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
    } & {
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
    } & Record<Exclude<keyof I, "messageId">, never>>(object: I): SendGroupMsgResp;
};
export declare const SendMsgReq: {
    encode(message: SendMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendMsgReq;
    fromJSON(object: any): SendMsgReq;
    toJSON(message: SendMsgReq): unknown;
    fromPartial<I extends {
        messageType?: string | undefined;
        userId?: number | undefined;
        groupId?: number | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        autoEscape?: boolean | undefined;
    } & {
        messageType?: string | undefined;
        userId?: number | undefined;
        groupId?: number | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        autoEscape?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SendMsgReq>, never>>(object: I): SendMsgReq;
};
export declare const SendMsgResp: {
    encode(message: SendMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendMsgResp;
    fromJSON(object: any): SendMsgResp;
    toJSON(message: SendMsgResp): unknown;
    fromPartial<I extends {
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
    } & {
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
    } & Record<Exclude<keyof I, "messageId">, never>>(object: I): SendMsgResp;
};
export declare const DeleteMsgReq: {
    encode(message: DeleteMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteMsgReq;
    fromJSON(object: any): DeleteMsgReq;
    toJSON(message: DeleteMsgReq): unknown;
    fromPartial<I extends {
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
    } & {
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
    } & Record<Exclude<keyof I, "messageId">, never>>(object: I): DeleteMsgReq;
};
export declare const DeleteMsgResp: {
    encode(_: DeleteMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteMsgResp;
    fromJSON(_: any): DeleteMsgResp;
    toJSON(_: DeleteMsgResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): DeleteMsgResp;
};
export declare const GetMsgReq: {
    encode(message: GetMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetMsgReq;
    fromJSON(object: any): GetMsgReq;
    toJSON(message: GetMsgReq): unknown;
    fromPartial<I extends {
        messageId?: number | undefined;
    } & {
        messageId?: number | undefined;
    } & Record<Exclude<keyof I, "messageId">, never>>(object: I): GetMsgReq;
};
export declare const GetMsgResp: {
    encode(message: GetMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetMsgResp;
    fromJSON(object: any): GetMsgResp;
    toJSON(message: GetMsgResp): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        messageType?: string | undefined;
        messageId?: number | undefined;
        realId?: number | undefined;
        sender?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        rawMessage?: string | undefined;
    } & {
        time?: number | undefined;
        messageType?: string | undefined;
        messageId?: number | undefined;
        realId?: number | undefined;
        sender?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } & Record<Exclude<keyof I["sender"], keyof GetMsgResp_Sender>, never>) | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        rawMessage?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetMsgResp>, never>>(object: I): GetMsgResp;
};
export declare const GetMsgResp_Sender: {
    encode(message: GetMsgResp_Sender, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetMsgResp_Sender;
    fromJSON(object: any): GetMsgResp_Sender;
    toJSON(message: GetMsgResp_Sender): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        level?: string | undefined;
        role?: string | undefined;
        title?: string | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        level?: string | undefined;
        role?: string | undefined;
        title?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetMsgResp_Sender>, never>>(object: I): GetMsgResp_Sender;
};
export declare const GetForwardMsgReq: {
    encode(message: GetForwardMsgReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetForwardMsgReq;
    fromJSON(object: any): GetForwardMsgReq;
    toJSON(message: GetForwardMsgReq): unknown;
    fromPartial<I extends {
        id?: string | undefined;
    } & {
        id?: string | undefined;
    } & Record<Exclude<keyof I, "id">, never>>(object: I): GetForwardMsgReq;
};
export declare const GetForwardMsgResp: {
    encode(_: GetForwardMsgResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetForwardMsgResp;
    fromJSON(_: any): GetForwardMsgResp;
    toJSON(_: GetForwardMsgResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetForwardMsgResp;
};
export declare const SendLikeReq: {
    encode(message: SendLikeReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendLikeReq;
    fromJSON(object: any): SendLikeReq;
    toJSON(message: SendLikeReq): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        times?: number | undefined;
    } & {
        userId?: number | undefined;
        times?: number | undefined;
    } & Record<Exclude<keyof I, keyof SendLikeReq>, never>>(object: I): SendLikeReq;
};
export declare const SendLikeResp: {
    encode(_: SendLikeResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SendLikeResp;
    fromJSON(_: any): SendLikeResp;
    toJSON(_: SendLikeResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SendLikeResp;
};
export declare const SetGroupKickReq: {
    encode(message: SetGroupKickReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupKickReq;
    fromJSON(object: any): SetGroupKickReq;
    toJSON(message: SetGroupKickReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        rejectAddRequest?: boolean | undefined;
        userIds?: number[] | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        rejectAddRequest?: boolean | undefined;
        userIds?: (number[] & number[] & Record<Exclude<keyof I["userIds"], keyof number[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupKickReq>, never>>(object: I): SetGroupKickReq;
};
export declare const SetGroupKickResp: {
    encode(_: SetGroupKickResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupKickResp;
    fromJSON(_: any): SetGroupKickResp;
    toJSON(_: SetGroupKickResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupKickResp;
};
export declare const SetGroupBanReq: {
    encode(message: SetGroupBanReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupBanReq;
    fromJSON(object: any): SetGroupBanReq;
    toJSON(message: SetGroupBanReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        duration?: number | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        duration?: number | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupBanReq>, never>>(object: I): SetGroupBanReq;
};
export declare const SetGroupBanResp: {
    encode(_: SetGroupBanResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupBanResp;
    fromJSON(_: any): SetGroupBanResp;
    toJSON(_: SetGroupBanResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupBanResp;
};
export declare const SetGroupAnonymousBanReq: {
    encode(message: SetGroupAnonymousBanReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAnonymousBanReq;
    fromJSON(object: any): SetGroupAnonymousBanReq;
    toJSON(message: SetGroupAnonymousBanReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        anonymous?: {
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } | undefined;
        anonymousFlag?: string | undefined;
        flag?: string | undefined;
        duration?: number | undefined;
    } & {
        groupId?: number | undefined;
        anonymous?: ({
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } & {
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } & Record<Exclude<keyof I["anonymous"], keyof SetGroupAnonymousBanReq_Anonymous>, never>) | undefined;
        anonymousFlag?: string | undefined;
        flag?: string | undefined;
        duration?: number | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupAnonymousBanReq>, never>>(object: I): SetGroupAnonymousBanReq;
};
export declare const SetGroupAnonymousBanReq_Anonymous: {
    encode(message: SetGroupAnonymousBanReq_Anonymous, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAnonymousBanReq_Anonymous;
    fromJSON(object: any): SetGroupAnonymousBanReq_Anonymous;
    toJSON(message: SetGroupAnonymousBanReq_Anonymous): unknown;
    fromPartial<I extends {
        id?: number | undefined;
        name?: string | undefined;
        flag?: string | undefined;
    } & {
        id?: number | undefined;
        name?: string | undefined;
        flag?: string | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupAnonymousBanReq_Anonymous>, never>>(object: I): SetGroupAnonymousBanReq_Anonymous;
};
export declare const SetGroupAnonymousBanResp: {
    encode(_: SetGroupAnonymousBanResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAnonymousBanResp;
    fromJSON(_: any): SetGroupAnonymousBanResp;
    toJSON(_: SetGroupAnonymousBanResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupAnonymousBanResp;
};
export declare const SetGroupWholeBanReq: {
    encode(message: SetGroupWholeBanReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupWholeBanReq;
    fromJSON(object: any): SetGroupWholeBanReq;
    toJSON(message: SetGroupWholeBanReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        enable?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        enable?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupWholeBanReq>, never>>(object: I): SetGroupWholeBanReq;
};
export declare const SetGroupWholeBanResp: {
    encode(_: SetGroupWholeBanResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupWholeBanResp;
    fromJSON(_: any): SetGroupWholeBanResp;
    toJSON(_: SetGroupWholeBanResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupWholeBanResp;
};
export declare const SetGroupAdminReq: {
    encode(message: SetGroupAdminReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAdminReq;
    fromJSON(object: any): SetGroupAdminReq;
    toJSON(message: SetGroupAdminReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        enable?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        enable?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupAdminReq>, never>>(object: I): SetGroupAdminReq;
};
export declare const SetGroupAdminResp: {
    encode(_: SetGroupAdminResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAdminResp;
    fromJSON(_: any): SetGroupAdminResp;
    toJSON(_: SetGroupAdminResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupAdminResp;
};
export declare const SetGroupAnonymousReq: {
    encode(message: SetGroupAnonymousReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAnonymousReq;
    fromJSON(object: any): SetGroupAnonymousReq;
    toJSON(message: SetGroupAnonymousReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        enable?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        enable?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupAnonymousReq>, never>>(object: I): SetGroupAnonymousReq;
};
export declare const SetGroupAnonymousResp: {
    encode(_: SetGroupAnonymousResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAnonymousResp;
    fromJSON(_: any): SetGroupAnonymousResp;
    toJSON(_: SetGroupAnonymousResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupAnonymousResp;
};
export declare const SetGroupCardReq: {
    encode(message: SetGroupCardReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupCardReq;
    fromJSON(object: any): SetGroupCardReq;
    toJSON(message: SetGroupCardReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        card?: string | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        card?: string | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupCardReq>, never>>(object: I): SetGroupCardReq;
};
export declare const SetGroupCardResp: {
    encode(_: SetGroupCardResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupCardResp;
    fromJSON(_: any): SetGroupCardResp;
    toJSON(_: SetGroupCardResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupCardResp;
};
export declare const SetGroupNameReq: {
    encode(message: SetGroupNameReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupNameReq;
    fromJSON(object: any): SetGroupNameReq;
    toJSON(message: SetGroupNameReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        groupName?: string | undefined;
    } & {
        groupId?: number | undefined;
        groupName?: string | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupNameReq>, never>>(object: I): SetGroupNameReq;
};
export declare const SetGroupNameResp: {
    encode(_: SetGroupNameResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupNameResp;
    fromJSON(_: any): SetGroupNameResp;
    toJSON(_: SetGroupNameResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupNameResp;
};
export declare const SetGroupLeaveReq: {
    encode(message: SetGroupLeaveReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupLeaveReq;
    fromJSON(object: any): SetGroupLeaveReq;
    toJSON(message: SetGroupLeaveReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        isDismiss?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        isDismiss?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupLeaveReq>, never>>(object: I): SetGroupLeaveReq;
};
export declare const SetGroupLeaveResp: {
    encode(_: SetGroupLeaveResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupLeaveResp;
    fromJSON(_: any): SetGroupLeaveResp;
    toJSON(_: SetGroupLeaveResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupLeaveResp;
};
export declare const SetGroupSpecialTitleReq: {
    encode(message: SetGroupSpecialTitleReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupSpecialTitleReq;
    fromJSON(object: any): SetGroupSpecialTitleReq;
    toJSON(message: SetGroupSpecialTitleReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        specialTitle?: string | undefined;
        duration?: number | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        specialTitle?: string | undefined;
        duration?: number | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupSpecialTitleReq>, never>>(object: I): SetGroupSpecialTitleReq;
};
export declare const SetGroupSpecialTitleResp: {
    encode(_: SetGroupSpecialTitleResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupSpecialTitleResp;
    fromJSON(_: any): SetGroupSpecialTitleResp;
    toJSON(_: SetGroupSpecialTitleResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupSpecialTitleResp;
};
export declare const SetFriendAddRequestReq: {
    encode(message: SetFriendAddRequestReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetFriendAddRequestReq;
    fromJSON(object: any): SetFriendAddRequestReq;
    toJSON(message: SetFriendAddRequestReq): unknown;
    fromPartial<I extends {
        flag?: string | undefined;
        approve?: boolean | undefined;
        remark?: string | undefined;
    } & {
        flag?: string | undefined;
        approve?: boolean | undefined;
        remark?: string | undefined;
    } & Record<Exclude<keyof I, keyof SetFriendAddRequestReq>, never>>(object: I): SetFriendAddRequestReq;
};
export declare const SetFriendAddRequestResp: {
    encode(_: SetFriendAddRequestResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetFriendAddRequestResp;
    fromJSON(_: any): SetFriendAddRequestResp;
    toJSON(_: SetFriendAddRequestResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetFriendAddRequestResp;
};
export declare const SetGroupAddRequestReq: {
    encode(message: SetGroupAddRequestReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAddRequestReq;
    fromJSON(object: any): SetGroupAddRequestReq;
    toJSON(message: SetGroupAddRequestReq): unknown;
    fromPartial<I extends {
        flag?: string | undefined;
        subType?: string | undefined;
        type?: string | undefined;
        approve?: boolean | undefined;
        reason?: string | undefined;
    } & {
        flag?: string | undefined;
        subType?: string | undefined;
        type?: string | undefined;
        approve?: boolean | undefined;
        reason?: string | undefined;
    } & Record<Exclude<keyof I, keyof SetGroupAddRequestReq>, never>>(object: I): SetGroupAddRequestReq;
};
export declare const SetGroupAddRequestResp: {
    encode(_: SetGroupAddRequestResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupAddRequestResp;
    fromJSON(_: any): SetGroupAddRequestResp;
    toJSON(_: SetGroupAddRequestResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupAddRequestResp;
};
export declare const GetLoginInfoReq: {
    encode(_: GetLoginInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetLoginInfoReq;
    fromJSON(_: any): GetLoginInfoReq;
    toJSON(_: GetLoginInfoReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetLoginInfoReq;
};
export declare const GetLoginInfoResp: {
    encode(message: GetLoginInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetLoginInfoResp;
    fromJSON(object: any): GetLoginInfoResp;
    toJSON(message: GetLoginInfoResp): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetLoginInfoResp>, never>>(object: I): GetLoginInfoResp;
};
export declare const GetStrangerInfoReq: {
    encode(message: GetStrangerInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetStrangerInfoReq;
    fromJSON(object: any): GetStrangerInfoReq;
    toJSON(message: GetStrangerInfoReq): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        noCache?: boolean | undefined;
    } & {
        userId?: number | undefined;
        noCache?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetStrangerInfoReq>, never>>(object: I): GetStrangerInfoReq;
};
export declare const GetStrangerInfoResp: {
    encode(message: GetStrangerInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetStrangerInfoResp;
    fromJSON(object: any): GetStrangerInfoResp;
    toJSON(message: GetStrangerInfoResp): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        level?: number | undefined;
        loginDays?: number | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        level?: number | undefined;
        loginDays?: number | undefined;
    } & Record<Exclude<keyof I, keyof GetStrangerInfoResp>, never>>(object: I): GetStrangerInfoResp;
};
export declare const GetFriendListReq: {
    encode(_: GetFriendListReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetFriendListReq;
    fromJSON(_: any): GetFriendListReq;
    toJSON(_: GetFriendListReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetFriendListReq;
};
export declare const GetFriendListResp: {
    encode(message: GetFriendListResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetFriendListResp;
    fromJSON(object: any): GetFriendListResp;
    toJSON(message: GetFriendListResp): unknown;
    fromPartial<I extends {
        friend?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            remark?: string | undefined;
        }[] | undefined;
    } & {
        friend?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            remark?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            remark?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            remark?: string | undefined;
        } & Record<Exclude<keyof I["friend"][number], keyof GetFriendListResp_Friend>, never>)[] & Record<Exclude<keyof I["friend"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            remark?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "friend">, never>>(object: I): GetFriendListResp;
};
export declare const GetFriendListResp_Friend: {
    encode(message: GetFriendListResp_Friend, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetFriendListResp_Friend;
    fromJSON(object: any): GetFriendListResp_Friend;
    toJSON(message: GetFriendListResp_Friend): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        remark?: string | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        remark?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetFriendListResp_Friend>, never>>(object: I): GetFriendListResp_Friend;
};
export declare const GetGroupInfoReq: {
    encode(message: GetGroupInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupInfoReq;
    fromJSON(object: any): GetGroupInfoReq;
    toJSON(message: GetGroupInfoReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        noCache?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        noCache?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupInfoReq>, never>>(object: I): GetGroupInfoReq;
};
export declare const GetGroupInfoResp: {
    encode(message: GetGroupInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupInfoResp;
    fromJSON(object: any): GetGroupInfoResp;
    toJSON(message: GetGroupInfoResp): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        groupName?: string | undefined;
        memberCount?: number | undefined;
        maxMemberCount?: number | undefined;
    } & {
        groupId?: number | undefined;
        groupName?: string | undefined;
        memberCount?: number | undefined;
        maxMemberCount?: number | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupInfoResp>, never>>(object: I): GetGroupInfoResp;
};
export declare const GetGroupListReq: {
    encode(_: GetGroupListReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupListReq;
    fromJSON(_: any): GetGroupListReq;
    toJSON(_: GetGroupListReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetGroupListReq;
};
export declare const GetGroupListResp: {
    encode(message: GetGroupListResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupListResp;
    fromJSON(object: any): GetGroupListResp;
    toJSON(message: GetGroupListResp): unknown;
    fromPartial<I extends {
        group?: {
            groupId?: number | undefined;
            groupName?: string | undefined;
            memberCount?: number | undefined;
            maxMemberCount?: number | undefined;
        }[] | undefined;
    } & {
        group?: ({
            groupId?: number | undefined;
            groupName?: string | undefined;
            memberCount?: number | undefined;
            maxMemberCount?: number | undefined;
        }[] & ({
            groupId?: number | undefined;
            groupName?: string | undefined;
            memberCount?: number | undefined;
            maxMemberCount?: number | undefined;
        } & {
            groupId?: number | undefined;
            groupName?: string | undefined;
            memberCount?: number | undefined;
            maxMemberCount?: number | undefined;
        } & Record<Exclude<keyof I["group"][number], keyof GetGroupListResp_Group>, never>)[] & Record<Exclude<keyof I["group"], keyof {
            groupId?: number | undefined;
            groupName?: string | undefined;
            memberCount?: number | undefined;
            maxMemberCount?: number | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "group">, never>>(object: I): GetGroupListResp;
};
export declare const GetGroupListResp_Group: {
    encode(message: GetGroupListResp_Group, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupListResp_Group;
    fromJSON(object: any): GetGroupListResp_Group;
    toJSON(message: GetGroupListResp_Group): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        groupName?: string | undefined;
        memberCount?: number | undefined;
        maxMemberCount?: number | undefined;
    } & {
        groupId?: number | undefined;
        groupName?: string | undefined;
        memberCount?: number | undefined;
        maxMemberCount?: number | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupListResp_Group>, never>>(object: I): GetGroupListResp_Group;
};
export declare const GetGroupMemberInfoReq: {
    encode(message: GetGroupMemberInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupMemberInfoReq;
    fromJSON(object: any): GetGroupMemberInfoReq;
    toJSON(message: GetGroupMemberInfoReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        noCache?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        noCache?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupMemberInfoReq>, never>>(object: I): GetGroupMemberInfoReq;
};
export declare const GetGroupMemberInfoResp: {
    encode(message: GetGroupMemberInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupMemberInfoResp;
    fromJSON(object: any): GetGroupMemberInfoResp;
    toJSON(message: GetGroupMemberInfoResp): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        joinTime?: number | undefined;
        lastSentTime?: number | undefined;
        level?: string | undefined;
        role?: string | undefined;
        unfriendly?: boolean | undefined;
        title?: string | undefined;
        titleExpireTime?: number | undefined;
        cardChangeable?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        joinTime?: number | undefined;
        lastSentTime?: number | undefined;
        level?: string | undefined;
        role?: string | undefined;
        unfriendly?: boolean | undefined;
        title?: string | undefined;
        titleExpireTime?: number | undefined;
        cardChangeable?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupMemberInfoResp>, never>>(object: I): GetGroupMemberInfoResp;
};
export declare const GetGroupMemberListReq: {
    encode(message: GetGroupMemberListReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupMemberListReq;
    fromJSON(object: any): GetGroupMemberListReq;
    toJSON(message: GetGroupMemberListReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
    } & {
        groupId?: number | undefined;
    } & Record<Exclude<keyof I, "groupId">, never>>(object: I): GetGroupMemberListReq;
};
export declare const GetGroupMemberListResp: {
    encode(message: GetGroupMemberListResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupMemberListResp;
    fromJSON(object: any): GetGroupMemberListResp;
    toJSON(message: GetGroupMemberListResp): unknown;
    fromPartial<I extends {
        groupMember?: {
            groupId?: number | undefined;
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            joinTime?: number | undefined;
            lastSentTime?: number | undefined;
            level?: string | undefined;
            role?: string | undefined;
            unfriendly?: boolean | undefined;
            title?: string | undefined;
            titleExpireTime?: number | undefined;
            cardChangeable?: boolean | undefined;
        }[] | undefined;
    } & {
        groupMember?: ({
            groupId?: number | undefined;
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            joinTime?: number | undefined;
            lastSentTime?: number | undefined;
            level?: string | undefined;
            role?: string | undefined;
            unfriendly?: boolean | undefined;
            title?: string | undefined;
            titleExpireTime?: number | undefined;
            cardChangeable?: boolean | undefined;
        }[] & ({
            groupId?: number | undefined;
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            joinTime?: number | undefined;
            lastSentTime?: number | undefined;
            level?: string | undefined;
            role?: string | undefined;
            unfriendly?: boolean | undefined;
            title?: string | undefined;
            titleExpireTime?: number | undefined;
            cardChangeable?: boolean | undefined;
        } & {
            groupId?: number | undefined;
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            joinTime?: number | undefined;
            lastSentTime?: number | undefined;
            level?: string | undefined;
            role?: string | undefined;
            unfriendly?: boolean | undefined;
            title?: string | undefined;
            titleExpireTime?: number | undefined;
            cardChangeable?: boolean | undefined;
        } & Record<Exclude<keyof I["groupMember"][number], keyof GetGroupMemberListResp_GroupMember>, never>)[] & Record<Exclude<keyof I["groupMember"], keyof {
            groupId?: number | undefined;
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            joinTime?: number | undefined;
            lastSentTime?: number | undefined;
            level?: string | undefined;
            role?: string | undefined;
            unfriendly?: boolean | undefined;
            title?: string | undefined;
            titleExpireTime?: number | undefined;
            cardChangeable?: boolean | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "groupMember">, never>>(object: I): GetGroupMemberListResp;
};
export declare const GetGroupMemberListResp_GroupMember: {
    encode(message: GetGroupMemberListResp_GroupMember, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupMemberListResp_GroupMember;
    fromJSON(object: any): GetGroupMemberListResp_GroupMember;
    toJSON(message: GetGroupMemberListResp_GroupMember): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        joinTime?: number | undefined;
        lastSentTime?: number | undefined;
        level?: string | undefined;
        role?: string | undefined;
        unfriendly?: boolean | undefined;
        title?: string | undefined;
        titleExpireTime?: number | undefined;
        cardChangeable?: boolean | undefined;
    } & {
        groupId?: number | undefined;
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        joinTime?: number | undefined;
        lastSentTime?: number | undefined;
        level?: string | undefined;
        role?: string | undefined;
        unfriendly?: boolean | undefined;
        title?: string | undefined;
        titleExpireTime?: number | undefined;
        cardChangeable?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupMemberListResp_GroupMember>, never>>(object: I): GetGroupMemberListResp_GroupMember;
};
export declare const GetGroupHonorInfoReq: {
    encode(message: GetGroupHonorInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupHonorInfoReq;
    fromJSON(object: any): GetGroupHonorInfoReq;
    toJSON(message: GetGroupHonorInfoReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        type?: string | undefined;
    } & {
        groupId?: number | undefined;
        type?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupHonorInfoReq>, never>>(object: I): GetGroupHonorInfoReq;
};
export declare const GetGroupHonorInfoResp: {
    encode(message: GetGroupHonorInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupHonorInfoResp;
    fromJSON(object: any): GetGroupHonorInfoResp;
    toJSON(message: GetGroupHonorInfoResp): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
        currentTalkative?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            dayCount?: number | undefined;
        } | undefined;
        talkative?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] | undefined;
        performer?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] | undefined;
        legend?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] | undefined;
        strongNewbie?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] | undefined;
        emotion?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] | undefined;
    } & {
        groupId?: number | undefined;
        currentTalkative?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            dayCount?: number | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            dayCount?: number | undefined;
        } & Record<Exclude<keyof I["currentTalkative"], keyof GetGroupHonorInfoResp_CurrentTalkative>, never>) | undefined;
        talkative?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & Record<Exclude<keyof I["talkative"][number], keyof GetGroupHonorInfoResp_Honor>, never>)[] & Record<Exclude<keyof I["talkative"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[]>, never>) | undefined;
        performer?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & Record<Exclude<keyof I["performer"][number], keyof GetGroupHonorInfoResp_Honor>, never>)[] & Record<Exclude<keyof I["performer"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[]>, never>) | undefined;
        legend?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & Record<Exclude<keyof I["legend"][number], keyof GetGroupHonorInfoResp_Honor>, never>)[] & Record<Exclude<keyof I["legend"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[]>, never>) | undefined;
        strongNewbie?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & Record<Exclude<keyof I["strongNewbie"][number], keyof GetGroupHonorInfoResp_Honor>, never>)[] & Record<Exclude<keyof I["strongNewbie"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[]>, never>) | undefined;
        emotion?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[] & ({
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        } & Record<Exclude<keyof I["emotion"][number], keyof GetGroupHonorInfoResp_Honor>, never>)[] & Record<Exclude<keyof I["emotion"], keyof {
            userId?: number | undefined;
            nickname?: string | undefined;
            avatar?: string | undefined;
            description?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupHonorInfoResp>, never>>(object: I): GetGroupHonorInfoResp;
};
export declare const GetGroupHonorInfoResp_CurrentTalkative: {
    encode(message: GetGroupHonorInfoResp_CurrentTalkative, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupHonorInfoResp_CurrentTalkative;
    fromJSON(object: any): GetGroupHonorInfoResp_CurrentTalkative;
    toJSON(message: GetGroupHonorInfoResp_CurrentTalkative): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        avatar?: string | undefined;
        dayCount?: number | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        avatar?: string | undefined;
        dayCount?: number | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupHonorInfoResp_CurrentTalkative>, never>>(object: I): GetGroupHonorInfoResp_CurrentTalkative;
};
export declare const GetGroupHonorInfoResp_Honor: {
    encode(message: GetGroupHonorInfoResp_Honor, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupHonorInfoResp_Honor;
    fromJSON(object: any): GetGroupHonorInfoResp_Honor;
    toJSON(message: GetGroupHonorInfoResp_Honor): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        avatar?: string | undefined;
        description?: string | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        avatar?: string | undefined;
        description?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupHonorInfoResp_Honor>, never>>(object: I): GetGroupHonorInfoResp_Honor;
};
export declare const GetCookiesReq: {
    encode(message: GetCookiesReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCookiesReq;
    fromJSON(object: any): GetCookiesReq;
    toJSON(message: GetCookiesReq): unknown;
    fromPartial<I extends {
        domain?: string | undefined;
    } & {
        domain?: string | undefined;
    } & Record<Exclude<keyof I, "domain">, never>>(object: I): GetCookiesReq;
};
export declare const GetCookiesResp: {
    encode(message: GetCookiesResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCookiesResp;
    fromJSON(object: any): GetCookiesResp;
    toJSON(message: GetCookiesResp): unknown;
    fromPartial<I extends {
        cookies?: string | undefined;
    } & {
        cookies?: string | undefined;
    } & Record<Exclude<keyof I, "cookies">, never>>(object: I): GetCookiesResp;
};
export declare const GetCsrfTokenReq: {
    encode(_: GetCsrfTokenReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCsrfTokenReq;
    fromJSON(_: any): GetCsrfTokenReq;
    toJSON(_: GetCsrfTokenReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetCsrfTokenReq;
};
export declare const GetCsrfTokenResp: {
    encode(message: GetCsrfTokenResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCsrfTokenResp;
    fromJSON(object: any): GetCsrfTokenResp;
    toJSON(message: GetCsrfTokenResp): unknown;
    fromPartial<I extends {
        token?: number | undefined;
    } & {
        token?: number | undefined;
    } & Record<Exclude<keyof I, "token">, never>>(object: I): GetCsrfTokenResp;
};
export declare const GetCredentialsReq: {
    encode(message: GetCredentialsReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialsReq;
    fromJSON(object: any): GetCredentialsReq;
    toJSON(message: GetCredentialsReq): unknown;
    fromPartial<I extends {
        domain?: string | undefined;
    } & {
        domain?: string | undefined;
    } & Record<Exclude<keyof I, "domain">, never>>(object: I): GetCredentialsReq;
};
export declare const GetCredentialsResp: {
    encode(message: GetCredentialsResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialsResp;
    fromJSON(object: any): GetCredentialsResp;
    toJSON(message: GetCredentialsResp): unknown;
    fromPartial<I extends {
        cookies?: string | undefined;
        csrfToken?: number | undefined;
    } & {
        cookies?: string | undefined;
        csrfToken?: number | undefined;
    } & Record<Exclude<keyof I, keyof GetCredentialsResp>, never>>(object: I): GetCredentialsResp;
};
export declare const GetRecordReq: {
    encode(message: GetRecordReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetRecordReq;
    fromJSON(object: any): GetRecordReq;
    toJSON(message: GetRecordReq): unknown;
    fromPartial<I extends {
        file?: string | undefined;
        outFormat?: string | undefined;
    } & {
        file?: string | undefined;
        outFormat?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetRecordReq>, never>>(object: I): GetRecordReq;
};
export declare const GetRecordResp: {
    encode(message: GetRecordResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetRecordResp;
    fromJSON(object: any): GetRecordResp;
    toJSON(message: GetRecordResp): unknown;
    fromPartial<I extends {
        file?: string | undefined;
    } & {
        file?: string | undefined;
    } & Record<Exclude<keyof I, "file">, never>>(object: I): GetRecordResp;
};
export declare const GetImageReq: {
    encode(message: GetImageReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetImageReq;
    fromJSON(object: any): GetImageReq;
    toJSON(message: GetImageReq): unknown;
    fromPartial<I extends {
        file?: string | undefined;
    } & {
        file?: string | undefined;
    } & Record<Exclude<keyof I, "file">, never>>(object: I): GetImageReq;
};
export declare const GetImageResp: {
    encode(message: GetImageResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetImageResp;
    fromJSON(object: any): GetImageResp;
    toJSON(message: GetImageResp): unknown;
    fromPartial<I extends {
        file?: string | undefined;
    } & {
        file?: string | undefined;
    } & Record<Exclude<keyof I, "file">, never>>(object: I): GetImageResp;
};
export declare const CanSendImageReq: {
    encode(_: CanSendImageReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CanSendImageReq;
    fromJSON(_: any): CanSendImageReq;
    toJSON(_: CanSendImageReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): CanSendImageReq;
};
export declare const CanSendImageResp: {
    encode(message: CanSendImageResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CanSendImageResp;
    fromJSON(object: any): CanSendImageResp;
    toJSON(message: CanSendImageResp): unknown;
    fromPartial<I extends {
        yes?: boolean | undefined;
    } & {
        yes?: boolean | undefined;
    } & Record<Exclude<keyof I, "yes">, never>>(object: I): CanSendImageResp;
};
export declare const CanSendRecordReq: {
    encode(_: CanSendRecordReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CanSendRecordReq;
    fromJSON(_: any): CanSendRecordReq;
    toJSON(_: CanSendRecordReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): CanSendRecordReq;
};
export declare const CanSendRecordResp: {
    encode(message: CanSendRecordResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CanSendRecordResp;
    fromJSON(object: any): CanSendRecordResp;
    toJSON(message: CanSendRecordResp): unknown;
    fromPartial<I extends {
        yes?: boolean | undefined;
    } & {
        yes?: boolean | undefined;
    } & Record<Exclude<keyof I, "yes">, never>>(object: I): CanSendRecordResp;
};
export declare const GetStatusReq: {
    encode(_: GetStatusReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetStatusReq;
    fromJSON(_: any): GetStatusReq;
    toJSON(_: GetStatusReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetStatusReq;
};
export declare const GetStatusResp: {
    encode(message: GetStatusResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetStatusResp;
    fromJSON(object: any): GetStatusResp;
    toJSON(message: GetStatusResp): unknown;
    fromPartial<I extends {
        online?: boolean | undefined;
        good?: boolean | undefined;
    } & {
        online?: boolean | undefined;
        good?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof GetStatusResp>, never>>(object: I): GetStatusResp;
};
export declare const GetVersionInfoReq: {
    encode(_: GetVersionInfoReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetVersionInfoReq;
    fromJSON(_: any): GetVersionInfoReq;
    toJSON(_: GetVersionInfoReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetVersionInfoReq;
};
export declare const GetVersionInfoResp: {
    encode(message: GetVersionInfoResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetVersionInfoResp;
    fromJSON(object: any): GetVersionInfoResp;
    toJSON(message: GetVersionInfoResp): unknown;
    fromPartial<I extends {
        appName?: string | undefined;
        appVersion?: string | undefined;
        protocolVersion?: string | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        appName?: string | undefined;
        appVersion?: string | undefined;
        protocolVersion?: string | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GetVersionInfoResp>, never>>(object: I): GetVersionInfoResp;
};
export declare const GetVersionInfoResp_ExtraEntry: {
    encode(message: GetVersionInfoResp_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetVersionInfoResp_ExtraEntry;
    fromJSON(object: any): GetVersionInfoResp_ExtraEntry;
    toJSON(message: GetVersionInfoResp_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetVersionInfoResp_ExtraEntry>, never>>(object: I): GetVersionInfoResp_ExtraEntry;
};
export declare const SetRestartReq: {
    encode(message: SetRestartReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetRestartReq;
    fromJSON(object: any): SetRestartReq;
    toJSON(message: SetRestartReq): unknown;
    fromPartial<I extends {
        delay?: number | undefined;
    } & {
        delay?: number | undefined;
    } & Record<Exclude<keyof I, "delay">, never>>(object: I): SetRestartReq;
};
export declare const SetRestartResp: {
    encode(_: SetRestartResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetRestartResp;
    fromJSON(_: any): SetRestartResp;
    toJSON(_: SetRestartResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetRestartResp;
};
export declare const CleanCacheReq: {
    encode(_: CleanCacheReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CleanCacheReq;
    fromJSON(_: any): CleanCacheReq;
    toJSON(_: CleanCacheReq): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): CleanCacheReq;
};
export declare const CleanCacheResp: {
    encode(_: CleanCacheResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CleanCacheResp;
    fromJSON(_: any): CleanCacheResp;
    toJSON(_: CleanCacheResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): CleanCacheResp;
};
export declare const SetGroupSignInReq: {
    encode(message: SetGroupSignInReq, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupSignInReq;
    fromJSON(object: any): SetGroupSignInReq;
    toJSON(message: SetGroupSignInReq): unknown;
    fromPartial<I extends {
        groupId?: number | undefined;
    } & {
        groupId?: number | undefined;
    } & Record<Exclude<keyof I, "groupId">, never>>(object: I): SetGroupSignInReq;
};
export declare const SetGroupSignInResp: {
    encode(_: SetGroupSignInResp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetGroupSignInResp;
    fromJSON(_: any): SetGroupSignInResp;
    toJSON(_: SetGroupSignInResp): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetGroupSignInResp;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
