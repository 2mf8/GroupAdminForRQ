"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetGroupInfoResp = exports.GetGroupInfoReq = exports.GetFriendListResp_Friend = exports.GetFriendListResp = exports.GetFriendListReq = exports.GetStrangerInfoResp = exports.GetStrangerInfoReq = exports.GetLoginInfoResp = exports.GetLoginInfoReq = exports.SetGroupAddRequestResp = exports.SetGroupAddRequestReq = exports.SetFriendAddRequestResp = exports.SetFriendAddRequestReq = exports.SetGroupSpecialTitleResp = exports.SetGroupSpecialTitleReq = exports.SetGroupLeaveResp = exports.SetGroupLeaveReq = exports.SetGroupNameResp = exports.SetGroupNameReq = exports.SetGroupCardResp = exports.SetGroupCardReq = exports.SetGroupAnonymousResp = exports.SetGroupAnonymousReq = exports.SetGroupAdminResp = exports.SetGroupAdminReq = exports.SetGroupWholeBanResp = exports.SetGroupWholeBanReq = exports.SetGroupAnonymousBanResp = exports.SetGroupAnonymousBanReq_Anonymous = exports.SetGroupAnonymousBanReq = exports.SetGroupBanResp = exports.SetGroupBanReq = exports.SetGroupKickResp = exports.SetGroupKickReq = exports.SendLikeResp = exports.SendLikeReq = exports.GetForwardMsgResp = exports.GetForwardMsgReq = exports.GetMsgResp_Sender = exports.GetMsgResp = exports.GetMsgReq = exports.DeleteMsgResp = exports.DeleteMsgReq = exports.SendMsgResp = exports.SendMsgReq = exports.SendGroupMsgResp = exports.SendGroupMsgReq = exports.SendPrivateMsgResp = exports.SendPrivateMsgReq = exports.protobufPackage = void 0;
exports.SetGroupSignInResp = exports.SetGroupSignInReq = exports.CleanCacheResp = exports.CleanCacheReq = exports.SetRestartResp = exports.SetRestartReq = exports.GetVersionInfoResp_ExtraEntry = exports.GetVersionInfoResp = exports.GetVersionInfoReq = exports.GetStatusResp = exports.GetStatusReq = exports.CanSendRecordResp = exports.CanSendRecordReq = exports.CanSendImageResp = exports.CanSendImageReq = exports.GetImageResp = exports.GetImageReq = exports.GetRecordResp = exports.GetRecordReq = exports.GetCredentialsResp = exports.GetCredentialsReq = exports.GetCsrfTokenResp = exports.GetCsrfTokenReq = exports.GetCookiesResp = exports.GetCookiesReq = exports.GetGroupHonorInfoResp_Honor = exports.GetGroupHonorInfoResp_CurrentTalkative = exports.GetGroupHonorInfoResp = exports.GetGroupHonorInfoReq = exports.GetGroupMemberListResp_GroupMember = exports.GetGroupMemberListResp = exports.GetGroupMemberListReq = exports.GetGroupMemberInfoResp = exports.GetGroupMemberInfoReq = exports.GetGroupListResp_Group = exports.GetGroupListResp = exports.GetGroupListReq = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var _m0 = __importStar(require("protobufjs/minimal"));
var onebot_base_1 = require("./onebot_base");
exports.protobufPackage = "onebot";
function createBaseSendPrivateMsgReq() {
    return { userId: 0, message: [], autoEscape: false };
}
exports.SendPrivateMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        for (var _i = 0, _a = message.message; _i < _a.length; _i++) {
            var v = _a[_i];
            onebot_base_1.Message.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.autoEscape === true) {
            writer.uint32(24).bool(message.autoEscape);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendPrivateMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.message.push(onebot_base_1.Message.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.autoEscape = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            message: Array.isArray(object === null || object === void 0 ? void 0 : object.message)
                ? object.message.map(function (e) { return onebot_base_1.Message.fromJSON(e); })
                : [],
            autoEscape: isSet(object.autoEscape) ? Boolean(object.autoEscape) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        if (message.message) {
            obj.message = message.message.map(function (e) {
                return e ? onebot_base_1.Message.toJSON(e) : undefined;
            });
        }
        else {
            obj.message = [];
        }
        message.autoEscape !== undefined && (obj.autoEscape = message.autoEscape);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSendPrivateMsgReq();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.message = ((_b = object.message) === null || _b === void 0 ? void 0 : _b.map(function (e) { return onebot_base_1.Message.fromPartial(e); })) || [];
        message.autoEscape = (_c = object.autoEscape) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseSendPrivateMsgResp() {
    return { messageId: undefined };
}
exports.SendPrivateMsgResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageId !== undefined) {
            onebot_base_1.MessageReceipt.encode(message.messageId, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendPrivateMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.messageId = onebot_base_1.MessageReceipt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageId: isSet(object.messageId)
                ? onebot_base_1.MessageReceipt.fromJSON(object.messageId)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageId !== undefined &&
            (obj.messageId = message.messageId
                ? onebot_base_1.MessageReceipt.toJSON(message.messageId)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseSendPrivateMsgResp();
        message.messageId =
            object.messageId !== undefined && object.messageId !== null
                ? onebot_base_1.MessageReceipt.fromPartial(object.messageId)
                : undefined;
        return message;
    },
};
function createBaseSendGroupMsgReq() {
    return { groupId: 0, message: [], autoEscape: false };
}
exports.SendGroupMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        for (var _i = 0, _a = message.message; _i < _a.length; _i++) {
            var v = _a[_i];
            onebot_base_1.Message.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.autoEscape === true) {
            writer.uint32(24).bool(message.autoEscape);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendGroupMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.message.push(onebot_base_1.Message.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.autoEscape = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            message: Array.isArray(object === null || object === void 0 ? void 0 : object.message)
                ? object.message.map(function (e) { return onebot_base_1.Message.fromJSON(e); })
                : [],
            autoEscape: isSet(object.autoEscape) ? Boolean(object.autoEscape) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        if (message.message) {
            obj.message = message.message.map(function (e) {
                return e ? onebot_base_1.Message.toJSON(e) : undefined;
            });
        }
        else {
            obj.message = [];
        }
        message.autoEscape !== undefined && (obj.autoEscape = message.autoEscape);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSendGroupMsgReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.message = ((_b = object.message) === null || _b === void 0 ? void 0 : _b.map(function (e) { return onebot_base_1.Message.fromPartial(e); })) || [];
        message.autoEscape = (_c = object.autoEscape) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseSendGroupMsgResp() {
    return { messageId: undefined };
}
exports.SendGroupMsgResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageId !== undefined) {
            onebot_base_1.MessageReceipt.encode(message.messageId, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendGroupMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.messageId = onebot_base_1.MessageReceipt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageId: isSet(object.messageId)
                ? onebot_base_1.MessageReceipt.fromJSON(object.messageId)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageId !== undefined &&
            (obj.messageId = message.messageId
                ? onebot_base_1.MessageReceipt.toJSON(message.messageId)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseSendGroupMsgResp();
        message.messageId =
            object.messageId !== undefined && object.messageId !== null
                ? onebot_base_1.MessageReceipt.fromPartial(object.messageId)
                : undefined;
        return message;
    },
};
function createBaseSendMsgReq() {
    return {
        messageType: "",
        userId: 0,
        groupId: 0,
        message: [],
        autoEscape: false,
    };
}
exports.SendMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageType !== "") {
            writer.uint32(10).string(message.messageType);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.groupId !== 0) {
            writer.uint32(24).int64(message.groupId);
        }
        for (var _i = 0, _a = message.message; _i < _a.length; _i++) {
            var v = _a[_i];
            onebot_base_1.Message.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.autoEscape === true) {
            writer.uint32(40).bool(message.autoEscape);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.messageType = reader.string();
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 4:
                    message.message.push(onebot_base_1.Message.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.autoEscape = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageType: isSet(object.messageType) ? String(object.messageType) : "",
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            message: Array.isArray(object === null || object === void 0 ? void 0 : object.message)
                ? object.message.map(function (e) { return onebot_base_1.Message.fromJSON(e); })
                : [],
            autoEscape: isSet(object.autoEscape) ? Boolean(object.autoEscape) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageType !== undefined &&
            (obj.messageType = message.messageType);
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        if (message.message) {
            obj.message = message.message.map(function (e) {
                return e ? onebot_base_1.Message.toJSON(e) : undefined;
            });
        }
        else {
            obj.message = [];
        }
        message.autoEscape !== undefined && (obj.autoEscape = message.autoEscape);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseSendMsgReq();
        message.messageType = (_a = object.messageType) !== null && _a !== void 0 ? _a : "";
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.groupId = (_c = object.groupId) !== null && _c !== void 0 ? _c : 0;
        message.message = ((_d = object.message) === null || _d === void 0 ? void 0 : _d.map(function (e) { return onebot_base_1.Message.fromPartial(e); })) || [];
        message.autoEscape = (_e = object.autoEscape) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseSendMsgResp() {
    return { messageId: undefined };
}
exports.SendMsgResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageId !== undefined) {
            onebot_base_1.MessageReceipt.encode(message.messageId, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.messageId = onebot_base_1.MessageReceipt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageId: isSet(object.messageId)
                ? onebot_base_1.MessageReceipt.fromJSON(object.messageId)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageId !== undefined &&
            (obj.messageId = message.messageId
                ? onebot_base_1.MessageReceipt.toJSON(message.messageId)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseSendMsgResp();
        message.messageId =
            object.messageId !== undefined && object.messageId !== null
                ? onebot_base_1.MessageReceipt.fromPartial(object.messageId)
                : undefined;
        return message;
    },
};
function createBaseDeleteMsgReq() {
    return { messageId: undefined };
}
exports.DeleteMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageId !== undefined) {
            onebot_base_1.MessageReceipt.encode(message.messageId, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.messageId = onebot_base_1.MessageReceipt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageId: isSet(object.messageId)
                ? onebot_base_1.MessageReceipt.fromJSON(object.messageId)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageId !== undefined &&
            (obj.messageId = message.messageId
                ? onebot_base_1.MessageReceipt.toJSON(message.messageId)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseDeleteMsgReq();
        message.messageId =
            object.messageId !== undefined && object.messageId !== null
                ? onebot_base_1.MessageReceipt.fromPartial(object.messageId)
                : undefined;
        return message;
    },
};
function createBaseDeleteMsgResp() {
    return {};
}
exports.DeleteMsgResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseDeleteMsgResp();
        return message;
    },
};
function createBaseGetMsgReq() {
    return { messageId: 0 };
}
exports.GetMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.messageId !== 0) {
            writer.uint32(8).int32(message.messageId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.messageId = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            messageId: isSet(object.messageId) ? Number(object.messageId) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.messageId !== undefined &&
            (obj.messageId = Math.round(message.messageId));
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetMsgReq();
        message.messageId = (_a = object.messageId) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
function createBaseGetMsgResp() {
    return {
        time: 0,
        messageType: "",
        messageId: 0,
        realId: 0,
        sender: undefined,
        message: [],
        rawMessage: "",
    };
}
exports.GetMsgResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.time !== 0) {
            writer.uint32(8).int32(message.time);
        }
        if (message.messageType !== "") {
            writer.uint32(18).string(message.messageType);
        }
        if (message.messageId !== 0) {
            writer.uint32(24).int32(message.messageId);
        }
        if (message.realId !== 0) {
            writer.uint32(32).int32(message.realId);
        }
        if (message.sender !== undefined) {
            exports.GetMsgResp_Sender.encode(message.sender, writer.uint32(42).fork()).ldelim();
        }
        for (var _i = 0, _a = message.message; _i < _a.length; _i++) {
            var v = _a[_i];
            onebot_base_1.Message.encode(v, writer.uint32(50).fork()).ldelim();
        }
        if (message.rawMessage !== "") {
            writer.uint32(58).string(message.rawMessage);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.time = reader.int32();
                    break;
                case 2:
                    message.messageType = reader.string();
                    break;
                case 3:
                    message.messageId = reader.int32();
                    break;
                case 4:
                    message.realId = reader.int32();
                    break;
                case 5:
                    message.sender = exports.GetMsgResp_Sender.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.message.push(onebot_base_1.Message.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.rawMessage = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            time: isSet(object.time) ? Number(object.time) : 0,
            messageType: isSet(object.messageType) ? String(object.messageType) : "",
            messageId: isSet(object.messageId) ? Number(object.messageId) : 0,
            realId: isSet(object.realId) ? Number(object.realId) : 0,
            sender: isSet(object.sender)
                ? exports.GetMsgResp_Sender.fromJSON(object.sender)
                : undefined,
            message: Array.isArray(object === null || object === void 0 ? void 0 : object.message)
                ? object.message.map(function (e) { return onebot_base_1.Message.fromJSON(e); })
                : [],
            rawMessage: isSet(object.rawMessage) ? String(object.rawMessage) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.time !== undefined && (obj.time = Math.round(message.time));
        message.messageType !== undefined &&
            (obj.messageType = message.messageType);
        message.messageId !== undefined &&
            (obj.messageId = Math.round(message.messageId));
        message.realId !== undefined && (obj.realId = Math.round(message.realId));
        message.sender !== undefined &&
            (obj.sender = message.sender
                ? exports.GetMsgResp_Sender.toJSON(message.sender)
                : undefined);
        if (message.message) {
            obj.message = message.message.map(function (e) {
                return e ? onebot_base_1.Message.toJSON(e) : undefined;
            });
        }
        else {
            obj.message = [];
        }
        message.rawMessage !== undefined && (obj.rawMessage = message.rawMessage);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseGetMsgResp();
        message.time = (_a = object.time) !== null && _a !== void 0 ? _a : 0;
        message.messageType = (_b = object.messageType) !== null && _b !== void 0 ? _b : "";
        message.messageId = (_c = object.messageId) !== null && _c !== void 0 ? _c : 0;
        message.realId = (_d = object.realId) !== null && _d !== void 0 ? _d : 0;
        message.sender =
            object.sender !== undefined && object.sender !== null
                ? exports.GetMsgResp_Sender.fromPartial(object.sender)
                : undefined;
        message.message = ((_e = object.message) === null || _e === void 0 ? void 0 : _e.map(function (e) { return onebot_base_1.Message.fromPartial(e); })) || [];
        message.rawMessage = (_f = object.rawMessage) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
function createBaseGetMsgResp_Sender() {
    return {
        userId: 0,
        nickname: "",
        card: "",
        sex: "",
        age: 0,
        area: "",
        level: "",
        role: "",
        title: "",
    };
}
exports.GetMsgResp_Sender = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        if (message.card !== "") {
            writer.uint32(26).string(message.card);
        }
        if (message.sex !== "") {
            writer.uint32(34).string(message.sex);
        }
        if (message.age !== 0) {
            writer.uint32(40).int32(message.age);
        }
        if (message.area !== "") {
            writer.uint32(50).string(message.area);
        }
        if (message.level !== "") {
            writer.uint32(58).string(message.level);
        }
        if (message.role !== "") {
            writer.uint32(66).string(message.role);
        }
        if (message.title !== "") {
            writer.uint32(74).string(message.title);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetMsgResp_Sender();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                case 3:
                    message.card = reader.string();
                    break;
                case 4:
                    message.sex = reader.string();
                    break;
                case 5:
                    message.age = reader.int32();
                    break;
                case 6:
                    message.area = reader.string();
                    break;
                case 7:
                    message.level = reader.string();
                    break;
                case 8:
                    message.role = reader.string();
                    break;
                case 9:
                    message.title = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            card: isSet(object.card) ? String(object.card) : "",
            sex: isSet(object.sex) ? String(object.sex) : "",
            age: isSet(object.age) ? Number(object.age) : 0,
            area: isSet(object.area) ? String(object.area) : "",
            level: isSet(object.level) ? String(object.level) : "",
            role: isSet(object.role) ? String(object.role) : "",
            title: isSet(object.title) ? String(object.title) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.card !== undefined && (obj.card = message.card);
        message.sex !== undefined && (obj.sex = message.sex);
        message.age !== undefined && (obj.age = Math.round(message.age));
        message.area !== undefined && (obj.area = message.area);
        message.level !== undefined && (obj.level = message.level);
        message.role !== undefined && (obj.role = message.role);
        message.title !== undefined && (obj.title = message.title);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var message = createBaseGetMsgResp_Sender();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        message.card = (_c = object.card) !== null && _c !== void 0 ? _c : "";
        message.sex = (_d = object.sex) !== null && _d !== void 0 ? _d : "";
        message.age = (_e = object.age) !== null && _e !== void 0 ? _e : 0;
        message.area = (_f = object.area) !== null && _f !== void 0 ? _f : "";
        message.level = (_g = object.level) !== null && _g !== void 0 ? _g : "";
        message.role = (_h = object.role) !== null && _h !== void 0 ? _h : "";
        message.title = (_j = object.title) !== null && _j !== void 0 ? _j : "";
        return message;
    },
};
function createBaseGetForwardMsgReq() {
    return { id: "" };
}
exports.GetForwardMsgReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.id !== "") {
            writer.uint32(10).string(message.id);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetForwardMsgReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            id: isSet(object.id) ? String(object.id) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.id !== undefined && (obj.id = message.id);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetForwardMsgReq();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetForwardMsgResp() {
    return {};
}
exports.GetForwardMsgResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetForwardMsgResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetForwardMsgResp();
        return message;
    },
};
function createBaseSendLikeReq() {
    return { userId: 0, times: 0 };
}
exports.SendLikeReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.times !== 0) {
            writer.uint32(16).int32(message.times);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendLikeReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.times = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            times: isSet(object.times) ? Number(object.times) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.times !== undefined && (obj.times = Math.round(message.times));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSendLikeReq();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.times = (_b = object.times) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseSendLikeResp() {
    return {};
}
exports.SendLikeResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSendLikeResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSendLikeResp();
        return message;
    },
};
function createBaseSetGroupKickReq() {
    return { groupId: 0, userId: 0, rejectAddRequest: false, userIds: [] };
}
exports.SetGroupKickReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.rejectAddRequest === true) {
            writer.uint32(24).bool(message.rejectAddRequest);
        }
        writer.uint32(34).fork();
        for (var _i = 0, _a = message.userIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.int64(v);
        }
        writer.ldelim();
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupKickReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.rejectAddRequest = reader.bool();
                    break;
                case 4:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.userIds.push(longToNumber(reader.int64()));
                        }
                    }
                    else {
                        message.userIds.push(longToNumber(reader.int64()));
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            rejectAddRequest: isSet(object.rejectAddRequest)
                ? Boolean(object.rejectAddRequest)
                : false,
            userIds: Array.isArray(object === null || object === void 0 ? void 0 : object.userIds)
                ? object.userIds.map(function (e) { return Number(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.rejectAddRequest !== undefined &&
            (obj.rejectAddRequest = message.rejectAddRequest);
        if (message.userIds) {
            obj.userIds = message.userIds.map(function (e) { return Math.round(e); });
        }
        else {
            obj.userIds = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseSetGroupKickReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.rejectAddRequest = (_c = object.rejectAddRequest) !== null && _c !== void 0 ? _c : false;
        message.userIds = ((_d = object.userIds) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseSetGroupKickResp() {
    return {};
}
exports.SetGroupKickResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupKickResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupKickResp();
        return message;
    },
};
function createBaseSetGroupBanReq() {
    return { groupId: 0, userId: 0, duration: 0 };
}
exports.SetGroupBanReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.duration !== 0) {
            writer.uint32(24).int32(message.duration);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupBanReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.duration = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            duration: isSet(object.duration) ? Number(object.duration) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.duration !== undefined &&
            (obj.duration = Math.round(message.duration));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSetGroupBanReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.duration = (_c = object.duration) !== null && _c !== void 0 ? _c : 0;
        return message;
    },
};
function createBaseSetGroupBanResp() {
    return {};
}
exports.SetGroupBanResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupBanResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupBanResp();
        return message;
    },
};
function createBaseSetGroupAnonymousBanReq() {
    return {
        groupId: 0,
        anonymous: undefined,
        anonymousFlag: "",
        flag: "",
        duration: 0,
    };
}
exports.SetGroupAnonymousBanReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.anonymous !== undefined) {
            exports.SetGroupAnonymousBanReq_Anonymous.encode(message.anonymous, writer.uint32(18).fork()).ldelim();
        }
        if (message.anonymousFlag !== "") {
            writer.uint32(26).string(message.anonymousFlag);
        }
        if (message.flag !== "") {
            writer.uint32(34).string(message.flag);
        }
        if (message.duration !== 0) {
            writer.uint32(40).int64(message.duration);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAnonymousBanReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.anonymous = exports.SetGroupAnonymousBanReq_Anonymous.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.anonymousFlag = reader.string();
                    break;
                case 4:
                    message.flag = reader.string();
                    break;
                case 5:
                    message.duration = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            anonymous: isSet(object.anonymous)
                ? exports.SetGroupAnonymousBanReq_Anonymous.fromJSON(object.anonymous)
                : undefined,
            anonymousFlag: isSet(object.anonymousFlag)
                ? String(object.anonymousFlag)
                : "",
            flag: isSet(object.flag) ? String(object.flag) : "",
            duration: isSet(object.duration) ? Number(object.duration) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.anonymous !== undefined &&
            (obj.anonymous = message.anonymous
                ? exports.SetGroupAnonymousBanReq_Anonymous.toJSON(message.anonymous)
                : undefined);
        message.anonymousFlag !== undefined &&
            (obj.anonymousFlag = message.anonymousFlag);
        message.flag !== undefined && (obj.flag = message.flag);
        message.duration !== undefined &&
            (obj.duration = Math.round(message.duration));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseSetGroupAnonymousBanReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.anonymous =
            object.anonymous !== undefined && object.anonymous !== null
                ? exports.SetGroupAnonymousBanReq_Anonymous.fromPartial(object.anonymous)
                : undefined;
        message.anonymousFlag = (_b = object.anonymousFlag) !== null && _b !== void 0 ? _b : "";
        message.flag = (_c = object.flag) !== null && _c !== void 0 ? _c : "";
        message.duration = (_d = object.duration) !== null && _d !== void 0 ? _d : 0;
        return message;
    },
};
function createBaseSetGroupAnonymousBanReq_Anonymous() {
    return { id: 0, name: "", flag: "" };
}
exports.SetGroupAnonymousBanReq_Anonymous = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.id !== 0) {
            writer.uint32(8).int64(message.id);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.flag !== "") {
            writer.uint32(26).string(message.flag);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAnonymousBanReq_Anonymous();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = longToNumber(reader.int64());
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.flag = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            id: isSet(object.id) ? Number(object.id) : 0,
            name: isSet(object.name) ? String(object.name) : "",
            flag: isSet(object.flag) ? String(object.flag) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.id !== undefined && (obj.id = Math.round(message.id));
        message.name !== undefined && (obj.name = message.name);
        message.flag !== undefined && (obj.flag = message.flag);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSetGroupAnonymousBanReq_Anonymous();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : 0;
        message.name = (_b = object.name) !== null && _b !== void 0 ? _b : "";
        message.flag = (_c = object.flag) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseSetGroupAnonymousBanResp() {
    return {};
}
exports.SetGroupAnonymousBanResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAnonymousBanResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupAnonymousBanResp();
        return message;
    },
};
function createBaseSetGroupWholeBanReq() {
    return { groupId: 0, enable: false };
}
exports.SetGroupWholeBanReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.enable === true) {
            writer.uint32(16).bool(message.enable);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupWholeBanReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.enable = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            enable: isSet(object.enable) ? Boolean(object.enable) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.enable !== undefined && (obj.enable = message.enable);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSetGroupWholeBanReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.enable = (_b = object.enable) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseSetGroupWholeBanResp() {
    return {};
}
exports.SetGroupWholeBanResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupWholeBanResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupWholeBanResp();
        return message;
    },
};
function createBaseSetGroupAdminReq() {
    return { groupId: 0, userId: 0, enable: false };
}
exports.SetGroupAdminReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.enable === true) {
            writer.uint32(24).bool(message.enable);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAdminReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.enable = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            enable: isSet(object.enable) ? Boolean(object.enable) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.enable !== undefined && (obj.enable = message.enable);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSetGroupAdminReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.enable = (_c = object.enable) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseSetGroupAdminResp() {
    return {};
}
exports.SetGroupAdminResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAdminResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupAdminResp();
        return message;
    },
};
function createBaseSetGroupAnonymousReq() {
    return { groupId: 0, enable: false };
}
exports.SetGroupAnonymousReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.enable === true) {
            writer.uint32(16).bool(message.enable);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAnonymousReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.enable = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            enable: isSet(object.enable) ? Boolean(object.enable) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.enable !== undefined && (obj.enable = message.enable);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSetGroupAnonymousReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.enable = (_b = object.enable) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseSetGroupAnonymousResp() {
    return {};
}
exports.SetGroupAnonymousResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAnonymousResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupAnonymousResp();
        return message;
    },
};
function createBaseSetGroupCardReq() {
    return { groupId: 0, userId: 0, card: "" };
}
exports.SetGroupCardReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.card !== "") {
            writer.uint32(26).string(message.card);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupCardReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.card = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            card: isSet(object.card) ? String(object.card) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.card !== undefined && (obj.card = message.card);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSetGroupCardReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.card = (_c = object.card) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseSetGroupCardResp() {
    return {};
}
exports.SetGroupCardResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupCardResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupCardResp();
        return message;
    },
};
function createBaseSetGroupNameReq() {
    return { groupId: 0, groupName: "" };
}
exports.SetGroupNameReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.groupName !== "") {
            writer.uint32(18).string(message.groupName);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupNameReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.groupName = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            groupName: isSet(object.groupName) ? String(object.groupName) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.groupName !== undefined && (obj.groupName = message.groupName);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSetGroupNameReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.groupName = (_b = object.groupName) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseSetGroupNameResp() {
    return {};
}
exports.SetGroupNameResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupNameResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupNameResp();
        return message;
    },
};
function createBaseSetGroupLeaveReq() {
    return { groupId: 0, isDismiss: false };
}
exports.SetGroupLeaveReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.isDismiss === true) {
            writer.uint32(16).bool(message.isDismiss);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupLeaveReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.isDismiss = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            isDismiss: isSet(object.isDismiss) ? Boolean(object.isDismiss) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.isDismiss !== undefined && (obj.isDismiss = message.isDismiss);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSetGroupLeaveReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.isDismiss = (_b = object.isDismiss) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseSetGroupLeaveResp() {
    return {};
}
exports.SetGroupLeaveResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupLeaveResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupLeaveResp();
        return message;
    },
};
function createBaseSetGroupSpecialTitleReq() {
    return { groupId: 0, userId: 0, specialTitle: "", duration: 0 };
}
exports.SetGroupSpecialTitleReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.specialTitle !== "") {
            writer.uint32(26).string(message.specialTitle);
        }
        if (message.duration !== 0) {
            writer.uint32(32).int64(message.duration);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupSpecialTitleReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.specialTitle = reader.string();
                    break;
                case 4:
                    message.duration = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            specialTitle: isSet(object.specialTitle)
                ? String(object.specialTitle)
                : "",
            duration: isSet(object.duration) ? Number(object.duration) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.specialTitle !== undefined &&
            (obj.specialTitle = message.specialTitle);
        message.duration !== undefined &&
            (obj.duration = Math.round(message.duration));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseSetGroupSpecialTitleReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.specialTitle = (_c = object.specialTitle) !== null && _c !== void 0 ? _c : "";
        message.duration = (_d = object.duration) !== null && _d !== void 0 ? _d : 0;
        return message;
    },
};
function createBaseSetGroupSpecialTitleResp() {
    return {};
}
exports.SetGroupSpecialTitleResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupSpecialTitleResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupSpecialTitleResp();
        return message;
    },
};
function createBaseSetFriendAddRequestReq() {
    return { flag: "", approve: false, remark: "" };
}
exports.SetFriendAddRequestReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.flag !== "") {
            writer.uint32(10).string(message.flag);
        }
        if (message.approve === true) {
            writer.uint32(16).bool(message.approve);
        }
        if (message.remark !== "") {
            writer.uint32(26).string(message.remark);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetFriendAddRequestReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.flag = reader.string();
                    break;
                case 2:
                    message.approve = reader.bool();
                    break;
                case 3:
                    message.remark = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            flag: isSet(object.flag) ? String(object.flag) : "",
            approve: isSet(object.approve) ? Boolean(object.approve) : false,
            remark: isSet(object.remark) ? String(object.remark) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.flag !== undefined && (obj.flag = message.flag);
        message.approve !== undefined && (obj.approve = message.approve);
        message.remark !== undefined && (obj.remark = message.remark);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSetFriendAddRequestReq();
        message.flag = (_a = object.flag) !== null && _a !== void 0 ? _a : "";
        message.approve = (_b = object.approve) !== null && _b !== void 0 ? _b : false;
        message.remark = (_c = object.remark) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseSetFriendAddRequestResp() {
    return {};
}
exports.SetFriendAddRequestResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetFriendAddRequestResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetFriendAddRequestResp();
        return message;
    },
};
function createBaseSetGroupAddRequestReq() {
    return { flag: "", subType: "", type: "", approve: false, reason: "" };
}
exports.SetGroupAddRequestReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.flag !== "") {
            writer.uint32(10).string(message.flag);
        }
        if (message.subType !== "") {
            writer.uint32(18).string(message.subType);
        }
        if (message.type !== "") {
            writer.uint32(26).string(message.type);
        }
        if (message.approve === true) {
            writer.uint32(32).bool(message.approve);
        }
        if (message.reason !== "") {
            writer.uint32(42).string(message.reason);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAddRequestReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.flag = reader.string();
                    break;
                case 2:
                    message.subType = reader.string();
                    break;
                case 3:
                    message.type = reader.string();
                    break;
                case 4:
                    message.approve = reader.bool();
                    break;
                case 5:
                    message.reason = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            flag: isSet(object.flag) ? String(object.flag) : "",
            subType: isSet(object.subType) ? String(object.subType) : "",
            type: isSet(object.type) ? String(object.type) : "",
            approve: isSet(object.approve) ? Boolean(object.approve) : false,
            reason: isSet(object.reason) ? String(object.reason) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.flag !== undefined && (obj.flag = message.flag);
        message.subType !== undefined && (obj.subType = message.subType);
        message.type !== undefined && (obj.type = message.type);
        message.approve !== undefined && (obj.approve = message.approve);
        message.reason !== undefined && (obj.reason = message.reason);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseSetGroupAddRequestReq();
        message.flag = (_a = object.flag) !== null && _a !== void 0 ? _a : "";
        message.subType = (_b = object.subType) !== null && _b !== void 0 ? _b : "";
        message.type = (_c = object.type) !== null && _c !== void 0 ? _c : "";
        message.approve = (_d = object.approve) !== null && _d !== void 0 ? _d : false;
        message.reason = (_e = object.reason) !== null && _e !== void 0 ? _e : "";
        return message;
    },
};
function createBaseSetGroupAddRequestResp() {
    return {};
}
exports.SetGroupAddRequestResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupAddRequestResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupAddRequestResp();
        return message;
    },
};
function createBaseGetLoginInfoReq() {
    return {};
}
exports.GetLoginInfoReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetLoginInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetLoginInfoReq();
        return message;
    },
};
function createBaseGetLoginInfoResp() {
    return { userId: 0, nickname: "" };
}
exports.GetLoginInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetLoginInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetLoginInfoResp();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseGetStrangerInfoReq() {
    return { userId: 0, noCache: false };
}
exports.GetStrangerInfoReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.noCache === true) {
            writer.uint32(16).bool(message.noCache);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStrangerInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.noCache = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            noCache: isSet(object.noCache) ? Boolean(object.noCache) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.noCache !== undefined && (obj.noCache = message.noCache);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetStrangerInfoReq();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.noCache = (_b = object.noCache) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetStrangerInfoResp() {
    return { userId: 0, nickname: "", sex: "", age: 0, level: 0, loginDays: 0 };
}
exports.GetStrangerInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        if (message.sex !== "") {
            writer.uint32(26).string(message.sex);
        }
        if (message.age !== 0) {
            writer.uint32(32).int32(message.age);
        }
        if (message.level !== 0) {
            writer.uint32(40).int32(message.level);
        }
        if (message.loginDays !== 0) {
            writer.uint32(48).int64(message.loginDays);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStrangerInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                case 3:
                    message.sex = reader.string();
                    break;
                case 4:
                    message.age = reader.int32();
                    break;
                case 5:
                    message.level = reader.int32();
                    break;
                case 6:
                    message.loginDays = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            sex: isSet(object.sex) ? String(object.sex) : "",
            age: isSet(object.age) ? Number(object.age) : 0,
            level: isSet(object.level) ? Number(object.level) : 0,
            loginDays: isSet(object.loginDays) ? Number(object.loginDays) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.sex !== undefined && (obj.sex = message.sex);
        message.age !== undefined && (obj.age = Math.round(message.age));
        message.level !== undefined && (obj.level = Math.round(message.level));
        message.loginDays !== undefined &&
            (obj.loginDays = Math.round(message.loginDays));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseGetStrangerInfoResp();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        message.sex = (_c = object.sex) !== null && _c !== void 0 ? _c : "";
        message.age = (_d = object.age) !== null && _d !== void 0 ? _d : 0;
        message.level = (_e = object.level) !== null && _e !== void 0 ? _e : 0;
        message.loginDays = (_f = object.loginDays) !== null && _f !== void 0 ? _f : 0;
        return message;
    },
};
function createBaseGetFriendListReq() {
    return {};
}
exports.GetFriendListReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFriendListReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetFriendListReq();
        return message;
    },
};
function createBaseGetFriendListResp() {
    return { friend: [] };
}
exports.GetFriendListResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        for (var _i = 0, _a = message.friend; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetFriendListResp_Friend.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFriendListResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.friend.push(exports.GetFriendListResp_Friend.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            friend: Array.isArray(object === null || object === void 0 ? void 0 : object.friend)
                ? object.friend.map(function (e) { return exports.GetFriendListResp_Friend.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.friend) {
            obj.friend = message.friend.map(function (e) {
                return e ? exports.GetFriendListResp_Friend.toJSON(e) : undefined;
            });
        }
        else {
            obj.friend = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetFriendListResp();
        message.friend =
            ((_a = object.friend) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetFriendListResp_Friend.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseGetFriendListResp_Friend() {
    return { userId: 0, nickname: "", remark: "" };
}
exports.GetFriendListResp_Friend = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        if (message.remark !== "") {
            writer.uint32(26).string(message.remark);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFriendListResp_Friend();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                case 3:
                    message.remark = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            remark: isSet(object.remark) ? String(object.remark) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.remark !== undefined && (obj.remark = message.remark);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetFriendListResp_Friend();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        message.remark = (_c = object.remark) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseGetGroupInfoReq() {
    return { groupId: 0, noCache: false };
}
exports.GetGroupInfoReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.noCache === true) {
            writer.uint32(16).bool(message.noCache);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.noCache = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            noCache: isSet(object.noCache) ? Boolean(object.noCache) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.noCache !== undefined && (obj.noCache = message.noCache);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupInfoReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.noCache = (_b = object.noCache) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetGroupInfoResp() {
    return { groupId: 0, groupName: "", memberCount: 0, maxMemberCount: 0 };
}
exports.GetGroupInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.groupName !== "") {
            writer.uint32(18).string(message.groupName);
        }
        if (message.memberCount !== 0) {
            writer.uint32(24).int32(message.memberCount);
        }
        if (message.maxMemberCount !== 0) {
            writer.uint32(32).int32(message.maxMemberCount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.groupName = reader.string();
                    break;
                case 3:
                    message.memberCount = reader.int32();
                    break;
                case 4:
                    message.maxMemberCount = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            groupName: isSet(object.groupName) ? String(object.groupName) : "",
            memberCount: isSet(object.memberCount) ? Number(object.memberCount) : 0,
            maxMemberCount: isSet(object.maxMemberCount)
                ? Number(object.maxMemberCount)
                : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.groupName !== undefined && (obj.groupName = message.groupName);
        message.memberCount !== undefined &&
            (obj.memberCount = Math.round(message.memberCount));
        message.maxMemberCount !== undefined &&
            (obj.maxMemberCount = Math.round(message.maxMemberCount));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetGroupInfoResp();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.groupName = (_b = object.groupName) !== null && _b !== void 0 ? _b : "";
        message.memberCount = (_c = object.memberCount) !== null && _c !== void 0 ? _c : 0;
        message.maxMemberCount = (_d = object.maxMemberCount) !== null && _d !== void 0 ? _d : 0;
        return message;
    },
};
function createBaseGetGroupListReq() {
    return {};
}
exports.GetGroupListReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupListReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetGroupListReq();
        return message;
    },
};
function createBaseGetGroupListResp() {
    return { group: [] };
}
exports.GetGroupListResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        for (var _i = 0, _a = message.group; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupListResp_Group.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupListResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.group.push(exports.GetGroupListResp_Group.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            group: Array.isArray(object === null || object === void 0 ? void 0 : object.group)
                ? object.group.map(function (e) { return exports.GetGroupListResp_Group.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.group) {
            obj.group = message.group.map(function (e) {
                return e ? exports.GetGroupListResp_Group.toJSON(e) : undefined;
            });
        }
        else {
            obj.group = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupListResp();
        message.group =
            ((_a = object.group) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetGroupListResp_Group.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseGetGroupListResp_Group() {
    return { groupId: 0, groupName: "", memberCount: 0, maxMemberCount: 0 };
}
exports.GetGroupListResp_Group = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.groupName !== "") {
            writer.uint32(18).string(message.groupName);
        }
        if (message.memberCount !== 0) {
            writer.uint32(24).int32(message.memberCount);
        }
        if (message.maxMemberCount !== 0) {
            writer.uint32(32).int32(message.maxMemberCount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupListResp_Group();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.groupName = reader.string();
                    break;
                case 3:
                    message.memberCount = reader.int32();
                    break;
                case 4:
                    message.maxMemberCount = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            groupName: isSet(object.groupName) ? String(object.groupName) : "",
            memberCount: isSet(object.memberCount) ? Number(object.memberCount) : 0,
            maxMemberCount: isSet(object.maxMemberCount)
                ? Number(object.maxMemberCount)
                : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.groupName !== undefined && (obj.groupName = message.groupName);
        message.memberCount !== undefined &&
            (obj.memberCount = Math.round(message.memberCount));
        message.maxMemberCount !== undefined &&
            (obj.maxMemberCount = Math.round(message.maxMemberCount));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetGroupListResp_Group();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.groupName = (_b = object.groupName) !== null && _b !== void 0 ? _b : "";
        message.memberCount = (_c = object.memberCount) !== null && _c !== void 0 ? _c : 0;
        message.maxMemberCount = (_d = object.maxMemberCount) !== null && _d !== void 0 ? _d : 0;
        return message;
    },
};
function createBaseGetGroupMemberInfoReq() {
    return { groupId: 0, userId: 0, noCache: false };
}
exports.GetGroupMemberInfoReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.noCache === true) {
            writer.uint32(24).bool(message.noCache);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupMemberInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.noCache = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            noCache: isSet(object.noCache) ? Boolean(object.noCache) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.noCache !== undefined && (obj.noCache = message.noCache);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupMemberInfoReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.noCache = (_c = object.noCache) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetGroupMemberInfoResp() {
    return {
        groupId: 0,
        userId: 0,
        nickname: "",
        card: "",
        sex: "",
        age: 0,
        area: "",
        joinTime: 0,
        lastSentTime: 0,
        level: "",
        role: "",
        unfriendly: false,
        title: "",
        titleExpireTime: 0,
        cardChangeable: false,
    };
}
exports.GetGroupMemberInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(26).string(message.nickname);
        }
        if (message.card !== "") {
            writer.uint32(34).string(message.card);
        }
        if (message.sex !== "") {
            writer.uint32(42).string(message.sex);
        }
        if (message.age !== 0) {
            writer.uint32(48).int32(message.age);
        }
        if (message.area !== "") {
            writer.uint32(58).string(message.area);
        }
        if (message.joinTime !== 0) {
            writer.uint32(64).int64(message.joinTime);
        }
        if (message.lastSentTime !== 0) {
            writer.uint32(72).int64(message.lastSentTime);
        }
        if (message.level !== "") {
            writer.uint32(82).string(message.level);
        }
        if (message.role !== "") {
            writer.uint32(90).string(message.role);
        }
        if (message.unfriendly === true) {
            writer.uint32(96).bool(message.unfriendly);
        }
        if (message.title !== "") {
            writer.uint32(106).string(message.title);
        }
        if (message.titleExpireTime !== 0) {
            writer.uint32(112).int64(message.titleExpireTime);
        }
        if (message.cardChangeable === true) {
            writer.uint32(120).bool(message.cardChangeable);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupMemberInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.nickname = reader.string();
                    break;
                case 4:
                    message.card = reader.string();
                    break;
                case 5:
                    message.sex = reader.string();
                    break;
                case 6:
                    message.age = reader.int32();
                    break;
                case 7:
                    message.area = reader.string();
                    break;
                case 8:
                    message.joinTime = longToNumber(reader.int64());
                    break;
                case 9:
                    message.lastSentTime = longToNumber(reader.int64());
                    break;
                case 10:
                    message.level = reader.string();
                    break;
                case 11:
                    message.role = reader.string();
                    break;
                case 12:
                    message.unfriendly = reader.bool();
                    break;
                case 13:
                    message.title = reader.string();
                    break;
                case 14:
                    message.titleExpireTime = longToNumber(reader.int64());
                    break;
                case 15:
                    message.cardChangeable = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            card: isSet(object.card) ? String(object.card) : "",
            sex: isSet(object.sex) ? String(object.sex) : "",
            age: isSet(object.age) ? Number(object.age) : 0,
            area: isSet(object.area) ? String(object.area) : "",
            joinTime: isSet(object.joinTime) ? Number(object.joinTime) : 0,
            lastSentTime: isSet(object.lastSentTime)
                ? Number(object.lastSentTime)
                : 0,
            level: isSet(object.level) ? String(object.level) : "",
            role: isSet(object.role) ? String(object.role) : "",
            unfriendly: isSet(object.unfriendly) ? Boolean(object.unfriendly) : false,
            title: isSet(object.title) ? String(object.title) : "",
            titleExpireTime: isSet(object.titleExpireTime)
                ? Number(object.titleExpireTime)
                : 0,
            cardChangeable: isSet(object.cardChangeable)
                ? Boolean(object.cardChangeable)
                : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.card !== undefined && (obj.card = message.card);
        message.sex !== undefined && (obj.sex = message.sex);
        message.age !== undefined && (obj.age = Math.round(message.age));
        message.area !== undefined && (obj.area = message.area);
        message.joinTime !== undefined &&
            (obj.joinTime = Math.round(message.joinTime));
        message.lastSentTime !== undefined &&
            (obj.lastSentTime = Math.round(message.lastSentTime));
        message.level !== undefined && (obj.level = message.level);
        message.role !== undefined && (obj.role = message.role);
        message.unfriendly !== undefined && (obj.unfriendly = message.unfriendly);
        message.title !== undefined && (obj.title = message.title);
        message.titleExpireTime !== undefined &&
            (obj.titleExpireTime = Math.round(message.titleExpireTime));
        message.cardChangeable !== undefined &&
            (obj.cardChangeable = message.cardChangeable);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
        var message = createBaseGetGroupMemberInfoResp();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.nickname = (_c = object.nickname) !== null && _c !== void 0 ? _c : "";
        message.card = (_d = object.card) !== null && _d !== void 0 ? _d : "";
        message.sex = (_e = object.sex) !== null && _e !== void 0 ? _e : "";
        message.age = (_f = object.age) !== null && _f !== void 0 ? _f : 0;
        message.area = (_g = object.area) !== null && _g !== void 0 ? _g : "";
        message.joinTime = (_h = object.joinTime) !== null && _h !== void 0 ? _h : 0;
        message.lastSentTime = (_j = object.lastSentTime) !== null && _j !== void 0 ? _j : 0;
        message.level = (_k = object.level) !== null && _k !== void 0 ? _k : "";
        message.role = (_l = object.role) !== null && _l !== void 0 ? _l : "";
        message.unfriendly = (_m = object.unfriendly) !== null && _m !== void 0 ? _m : false;
        message.title = (_o = object.title) !== null && _o !== void 0 ? _o : "";
        message.titleExpireTime = (_p = object.titleExpireTime) !== null && _p !== void 0 ? _p : 0;
        message.cardChangeable = (_q = object.cardChangeable) !== null && _q !== void 0 ? _q : false;
        return message;
    },
};
function createBaseGetGroupMemberListReq() {
    return { groupId: 0 };
}
exports.GetGroupMemberListReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupMemberListReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupMemberListReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
function createBaseGetGroupMemberListResp() {
    return { groupMember: [] };
}
exports.GetGroupMemberListResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        for (var _i = 0, _a = message.groupMember; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupMemberListResp_GroupMember.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupMemberListResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupMember.push(exports.GetGroupMemberListResp_GroupMember.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupMember: Array.isArray(object === null || object === void 0 ? void 0 : object.groupMember)
                ? object.groupMember.map(function (e) {
                    return exports.GetGroupMemberListResp_GroupMember.fromJSON(e);
                })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.groupMember) {
            obj.groupMember = message.groupMember.map(function (e) {
                return e ? exports.GetGroupMemberListResp_GroupMember.toJSON(e) : undefined;
            });
        }
        else {
            obj.groupMember = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupMemberListResp();
        message.groupMember =
            ((_a = object.groupMember) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetGroupMemberListResp_GroupMember.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetGroupMemberListResp_GroupMember() {
    return {
        groupId: 0,
        userId: 0,
        nickname: "",
        card: "",
        sex: "",
        age: 0,
        area: "",
        joinTime: 0,
        lastSentTime: 0,
        level: "",
        role: "",
        unfriendly: false,
        title: "",
        titleExpireTime: 0,
        cardChangeable: false,
    };
}
exports.GetGroupMemberListResp_GroupMember = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.userId !== 0) {
            writer.uint32(16).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(26).string(message.nickname);
        }
        if (message.card !== "") {
            writer.uint32(34).string(message.card);
        }
        if (message.sex !== "") {
            writer.uint32(42).string(message.sex);
        }
        if (message.age !== 0) {
            writer.uint32(48).int32(message.age);
        }
        if (message.area !== "") {
            writer.uint32(58).string(message.area);
        }
        if (message.joinTime !== 0) {
            writer.uint32(64).int64(message.joinTime);
        }
        if (message.lastSentTime !== 0) {
            writer.uint32(72).int64(message.lastSentTime);
        }
        if (message.level !== "") {
            writer.uint32(82).string(message.level);
        }
        if (message.role !== "") {
            writer.uint32(90).string(message.role);
        }
        if (message.unfriendly === true) {
            writer.uint32(96).bool(message.unfriendly);
        }
        if (message.title !== "") {
            writer.uint32(106).string(message.title);
        }
        if (message.titleExpireTime !== 0) {
            writer.uint32(112).int64(message.titleExpireTime);
        }
        if (message.cardChangeable === true) {
            writer.uint32(120).bool(message.cardChangeable);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupMemberListResp_GroupMember();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 3:
                    message.nickname = reader.string();
                    break;
                case 4:
                    message.card = reader.string();
                    break;
                case 5:
                    message.sex = reader.string();
                    break;
                case 6:
                    message.age = reader.int32();
                    break;
                case 7:
                    message.area = reader.string();
                    break;
                case 8:
                    message.joinTime = longToNumber(reader.int64());
                    break;
                case 9:
                    message.lastSentTime = longToNumber(reader.int64());
                    break;
                case 10:
                    message.level = reader.string();
                    break;
                case 11:
                    message.role = reader.string();
                    break;
                case 12:
                    message.unfriendly = reader.bool();
                    break;
                case 13:
                    message.title = reader.string();
                    break;
                case 14:
                    message.titleExpireTime = longToNumber(reader.int64());
                    break;
                case 15:
                    message.cardChangeable = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            card: isSet(object.card) ? String(object.card) : "",
            sex: isSet(object.sex) ? String(object.sex) : "",
            age: isSet(object.age) ? Number(object.age) : 0,
            area: isSet(object.area) ? String(object.area) : "",
            joinTime: isSet(object.joinTime) ? Number(object.joinTime) : 0,
            lastSentTime: isSet(object.lastSentTime)
                ? Number(object.lastSentTime)
                : 0,
            level: isSet(object.level) ? String(object.level) : "",
            role: isSet(object.role) ? String(object.role) : "",
            unfriendly: isSet(object.unfriendly) ? Boolean(object.unfriendly) : false,
            title: isSet(object.title) ? String(object.title) : "",
            titleExpireTime: isSet(object.titleExpireTime)
                ? Number(object.titleExpireTime)
                : 0,
            cardChangeable: isSet(object.cardChangeable)
                ? Boolean(object.cardChangeable)
                : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.card !== undefined && (obj.card = message.card);
        message.sex !== undefined && (obj.sex = message.sex);
        message.age !== undefined && (obj.age = Math.round(message.age));
        message.area !== undefined && (obj.area = message.area);
        message.joinTime !== undefined &&
            (obj.joinTime = Math.round(message.joinTime));
        message.lastSentTime !== undefined &&
            (obj.lastSentTime = Math.round(message.lastSentTime));
        message.level !== undefined && (obj.level = message.level);
        message.role !== undefined && (obj.role = message.role);
        message.unfriendly !== undefined && (obj.unfriendly = message.unfriendly);
        message.title !== undefined && (obj.title = message.title);
        message.titleExpireTime !== undefined &&
            (obj.titleExpireTime = Math.round(message.titleExpireTime));
        message.cardChangeable !== undefined &&
            (obj.cardChangeable = message.cardChangeable);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
        var message = createBaseGetGroupMemberListResp_GroupMember();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.userId = (_b = object.userId) !== null && _b !== void 0 ? _b : 0;
        message.nickname = (_c = object.nickname) !== null && _c !== void 0 ? _c : "";
        message.card = (_d = object.card) !== null && _d !== void 0 ? _d : "";
        message.sex = (_e = object.sex) !== null && _e !== void 0 ? _e : "";
        message.age = (_f = object.age) !== null && _f !== void 0 ? _f : 0;
        message.area = (_g = object.area) !== null && _g !== void 0 ? _g : "";
        message.joinTime = (_h = object.joinTime) !== null && _h !== void 0 ? _h : 0;
        message.lastSentTime = (_j = object.lastSentTime) !== null && _j !== void 0 ? _j : 0;
        message.level = (_k = object.level) !== null && _k !== void 0 ? _k : "";
        message.role = (_l = object.role) !== null && _l !== void 0 ? _l : "";
        message.unfriendly = (_m = object.unfriendly) !== null && _m !== void 0 ? _m : false;
        message.title = (_o = object.title) !== null && _o !== void 0 ? _o : "";
        message.titleExpireTime = (_p = object.titleExpireTime) !== null && _p !== void 0 ? _p : 0;
        message.cardChangeable = (_q = object.cardChangeable) !== null && _q !== void 0 ? _q : false;
        return message;
    },
};
function createBaseGetGroupHonorInfoReq() {
    return { groupId: 0, type: "" };
}
exports.GetGroupHonorInfoReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.type !== "") {
            writer.uint32(18).string(message.type);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupHonorInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.type = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            type: isSet(object.type) ? String(object.type) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.type !== undefined && (obj.type = message.type);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupHonorInfoReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.type = (_b = object.type) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseGetGroupHonorInfoResp() {
    return {
        groupId: 0,
        currentTalkative: undefined,
        talkative: [],
        performer: [],
        legend: [],
        strongNewbie: [],
        emotion: [],
    };
}
exports.GetGroupHonorInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        if (message.currentTalkative !== undefined) {
            exports.GetGroupHonorInfoResp_CurrentTalkative.encode(message.currentTalkative, writer.uint32(18).fork()).ldelim();
        }
        for (var _i = 0, _a = message.talkative; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupHonorInfoResp_Honor.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (var _b = 0, _c = message.performer; _b < _c.length; _b++) {
            var v = _c[_b];
            exports.GetGroupHonorInfoResp_Honor.encode(v, writer.uint32(34).fork()).ldelim();
        }
        for (var _d = 0, _e = message.legend; _d < _e.length; _d++) {
            var v = _e[_d];
            exports.GetGroupHonorInfoResp_Honor.encode(v, writer.uint32(42).fork()).ldelim();
        }
        for (var _f = 0, _g = message.strongNewbie; _f < _g.length; _f++) {
            var v = _g[_f];
            exports.GetGroupHonorInfoResp_Honor.encode(v, writer.uint32(50).fork()).ldelim();
        }
        for (var _h = 0, _j = message.emotion; _h < _j.length; _h++) {
            var v = _j[_h];
            exports.GetGroupHonorInfoResp_Honor.encode(v, writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupHonorInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.currentTalkative =
                        exports.GetGroupHonorInfoResp_CurrentTalkative.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.talkative.push(exports.GetGroupHonorInfoResp_Honor.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.performer.push(exports.GetGroupHonorInfoResp_Honor.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.legend.push(exports.GetGroupHonorInfoResp_Honor.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.strongNewbie.push(exports.GetGroupHonorInfoResp_Honor.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.emotion.push(exports.GetGroupHonorInfoResp_Honor.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
            currentTalkative: isSet(object.currentTalkative)
                ? exports.GetGroupHonorInfoResp_CurrentTalkative.fromJSON(object.currentTalkative)
                : undefined,
            talkative: Array.isArray(object === null || object === void 0 ? void 0 : object.talkative)
                ? object.talkative.map(function (e) {
                    return exports.GetGroupHonorInfoResp_Honor.fromJSON(e);
                })
                : [],
            performer: Array.isArray(object === null || object === void 0 ? void 0 : object.performer)
                ? object.performer.map(function (e) {
                    return exports.GetGroupHonorInfoResp_Honor.fromJSON(e);
                })
                : [],
            legend: Array.isArray(object === null || object === void 0 ? void 0 : object.legend)
                ? object.legend.map(function (e) { return exports.GetGroupHonorInfoResp_Honor.fromJSON(e); })
                : [],
            strongNewbie: Array.isArray(object === null || object === void 0 ? void 0 : object.strongNewbie)
                ? object.strongNewbie.map(function (e) {
                    return exports.GetGroupHonorInfoResp_Honor.fromJSON(e);
                })
                : [],
            emotion: Array.isArray(object === null || object === void 0 ? void 0 : object.emotion)
                ? object.emotion.map(function (e) {
                    return exports.GetGroupHonorInfoResp_Honor.fromJSON(e);
                })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        message.currentTalkative !== undefined &&
            (obj.currentTalkative = message.currentTalkative
                ? exports.GetGroupHonorInfoResp_CurrentTalkative.toJSON(message.currentTalkative)
                : undefined);
        if (message.talkative) {
            obj.talkative = message.talkative.map(function (e) {
                return e ? exports.GetGroupHonorInfoResp_Honor.toJSON(e) : undefined;
            });
        }
        else {
            obj.talkative = [];
        }
        if (message.performer) {
            obj.performer = message.performer.map(function (e) {
                return e ? exports.GetGroupHonorInfoResp_Honor.toJSON(e) : undefined;
            });
        }
        else {
            obj.performer = [];
        }
        if (message.legend) {
            obj.legend = message.legend.map(function (e) {
                return e ? exports.GetGroupHonorInfoResp_Honor.toJSON(e) : undefined;
            });
        }
        else {
            obj.legend = [];
        }
        if (message.strongNewbie) {
            obj.strongNewbie = message.strongNewbie.map(function (e) {
                return e ? exports.GetGroupHonorInfoResp_Honor.toJSON(e) : undefined;
            });
        }
        else {
            obj.strongNewbie = [];
        }
        if (message.emotion) {
            obj.emotion = message.emotion.map(function (e) {
                return e ? exports.GetGroupHonorInfoResp_Honor.toJSON(e) : undefined;
            });
        }
        else {
            obj.emotion = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseGetGroupHonorInfoResp();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        message.currentTalkative =
            object.currentTalkative !== undefined && object.currentTalkative !== null
                ? exports.GetGroupHonorInfoResp_CurrentTalkative.fromPartial(object.currentTalkative)
                : undefined;
        message.talkative =
            ((_b = object.talkative) === null || _b === void 0 ? void 0 : _b.map(function (e) {
                return exports.GetGroupHonorInfoResp_Honor.fromPartial(e);
            })) || [];
        message.performer =
            ((_c = object.performer) === null || _c === void 0 ? void 0 : _c.map(function (e) {
                return exports.GetGroupHonorInfoResp_Honor.fromPartial(e);
            })) || [];
        message.legend =
            ((_d = object.legend) === null || _d === void 0 ? void 0 : _d.map(function (e) { return exports.GetGroupHonorInfoResp_Honor.fromPartial(e); })) ||
                [];
        message.strongNewbie =
            ((_e = object.strongNewbie) === null || _e === void 0 ? void 0 : _e.map(function (e) {
                return exports.GetGroupHonorInfoResp_Honor.fromPartial(e);
            })) || [];
        message.emotion =
            ((_f = object.emotion) === null || _f === void 0 ? void 0 : _f.map(function (e) { return exports.GetGroupHonorInfoResp_Honor.fromPartial(e); })) ||
                [];
        return message;
    },
};
function createBaseGetGroupHonorInfoResp_CurrentTalkative() {
    return { userId: 0, nickname: "", avatar: "", dayCount: 0 };
}
exports.GetGroupHonorInfoResp_CurrentTalkative = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        if (message.avatar !== "") {
            writer.uint32(26).string(message.avatar);
        }
        if (message.dayCount !== 0) {
            writer.uint32(32).int32(message.dayCount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupHonorInfoResp_CurrentTalkative();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                case 3:
                    message.avatar = reader.string();
                    break;
                case 4:
                    message.dayCount = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            avatar: isSet(object.avatar) ? String(object.avatar) : "",
            dayCount: isSet(object.dayCount) ? Number(object.dayCount) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.avatar !== undefined && (obj.avatar = message.avatar);
        message.dayCount !== undefined &&
            (obj.dayCount = Math.round(message.dayCount));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetGroupHonorInfoResp_CurrentTalkative();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        message.avatar = (_c = object.avatar) !== null && _c !== void 0 ? _c : "";
        message.dayCount = (_d = object.dayCount) !== null && _d !== void 0 ? _d : 0;
        return message;
    },
};
function createBaseGetGroupHonorInfoResp_Honor() {
    return { userId: 0, nickname: "", avatar: "", description: "" };
}
exports.GetGroupHonorInfoResp_Honor = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.userId !== 0) {
            writer.uint32(8).int64(message.userId);
        }
        if (message.nickname !== "") {
            writer.uint32(18).string(message.nickname);
        }
        if (message.avatar !== "") {
            writer.uint32(26).string(message.avatar);
        }
        if (message.description !== "") {
            writer.uint32(34).string(message.description);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupHonorInfoResp_Honor();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.userId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.nickname = reader.string();
                    break;
                case 3:
                    message.avatar = reader.string();
                    break;
                case 4:
                    message.description = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            userId: isSet(object.userId) ? Number(object.userId) : 0,
            nickname: isSet(object.nickname) ? String(object.nickname) : "",
            avatar: isSet(object.avatar) ? String(object.avatar) : "",
            description: isSet(object.description) ? String(object.description) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.userId !== undefined && (obj.userId = Math.round(message.userId));
        message.nickname !== undefined && (obj.nickname = message.nickname);
        message.avatar !== undefined && (obj.avatar = message.avatar);
        message.description !== undefined &&
            (obj.description = message.description);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetGroupHonorInfoResp_Honor();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.nickname = (_b = object.nickname) !== null && _b !== void 0 ? _b : "";
        message.avatar = (_c = object.avatar) !== null && _c !== void 0 ? _c : "";
        message.description = (_d = object.description) !== null && _d !== void 0 ? _d : "";
        return message;
    },
};
function createBaseGetCookiesReq() {
    return { domain: "" };
}
exports.GetCookiesReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.domain !== "") {
            writer.uint32(10).string(message.domain);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCookiesReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.domain = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            domain: isSet(object.domain) ? String(object.domain) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.domain !== undefined && (obj.domain = message.domain);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetCookiesReq();
        message.domain = (_a = object.domain) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetCookiesResp() {
    return { cookies: "" };
}
exports.GetCookiesResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.cookies !== "") {
            writer.uint32(10).string(message.cookies);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCookiesResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.cookies = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            cookies: isSet(object.cookies) ? String(object.cookies) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.cookies !== undefined && (obj.cookies = message.cookies);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetCookiesResp();
        message.cookies = (_a = object.cookies) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetCsrfTokenReq() {
    return {};
}
exports.GetCsrfTokenReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCsrfTokenReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetCsrfTokenReq();
        return message;
    },
};
function createBaseGetCsrfTokenResp() {
    return { token: 0 };
}
exports.GetCsrfTokenResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.token !== 0) {
            writer.uint32(8).int32(message.token);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCsrfTokenResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.token = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            token: isSet(object.token) ? Number(object.token) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.token !== undefined && (obj.token = Math.round(message.token));
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetCsrfTokenResp();
        message.token = (_a = object.token) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
function createBaseGetCredentialsReq() {
    return { domain: "" };
}
exports.GetCredentialsReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.domain !== "") {
            writer.uint32(10).string(message.domain);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCredentialsReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.domain = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            domain: isSet(object.domain) ? String(object.domain) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.domain !== undefined && (obj.domain = message.domain);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetCredentialsReq();
        message.domain = (_a = object.domain) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetCredentialsResp() {
    return { cookies: "", csrfToken: 0 };
}
exports.GetCredentialsResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.cookies !== "") {
            writer.uint32(10).string(message.cookies);
        }
        if (message.csrfToken !== 0) {
            writer.uint32(16).int32(message.csrfToken);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCredentialsResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.cookies = reader.string();
                    break;
                case 2:
                    message.csrfToken = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            cookies: isSet(object.cookies) ? String(object.cookies) : "",
            csrfToken: isSet(object.csrfToken) ? Number(object.csrfToken) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.cookies !== undefined && (obj.cookies = message.cookies);
        message.csrfToken !== undefined &&
            (obj.csrfToken = Math.round(message.csrfToken));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetCredentialsResp();
        message.cookies = (_a = object.cookies) !== null && _a !== void 0 ? _a : "";
        message.csrfToken = (_b = object.csrfToken) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetRecordReq() {
    return { file: "", outFormat: "" };
}
exports.GetRecordReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.file !== "") {
            writer.uint32(10).string(message.file);
        }
        if (message.outFormat !== "") {
            writer.uint32(18).string(message.outFormat);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetRecordReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.file = reader.string();
                    break;
                case 2:
                    message.outFormat = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            file: isSet(object.file) ? String(object.file) : "",
            outFormat: isSet(object.outFormat) ? String(object.outFormat) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.file !== undefined && (obj.file = message.file);
        message.outFormat !== undefined && (obj.outFormat = message.outFormat);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetRecordReq();
        message.file = (_a = object.file) !== null && _a !== void 0 ? _a : "";
        message.outFormat = (_b = object.outFormat) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseGetRecordResp() {
    return { file: "" };
}
exports.GetRecordResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.file !== "") {
            writer.uint32(10).string(message.file);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetRecordResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.file = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            file: isSet(object.file) ? String(object.file) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.file !== undefined && (obj.file = message.file);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetRecordResp();
        message.file = (_a = object.file) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetImageReq() {
    return { file: "" };
}
exports.GetImageReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.file !== "") {
            writer.uint32(10).string(message.file);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetImageReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.file = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            file: isSet(object.file) ? String(object.file) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.file !== undefined && (obj.file = message.file);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetImageReq();
        message.file = (_a = object.file) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseGetImageResp() {
    return { file: "" };
}
exports.GetImageResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.file !== "") {
            writer.uint32(10).string(message.file);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetImageResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.file = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            file: isSet(object.file) ? String(object.file) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.file !== undefined && (obj.file = message.file);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetImageResp();
        message.file = (_a = object.file) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseCanSendImageReq() {
    return {};
}
exports.CanSendImageReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCanSendImageReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseCanSendImageReq();
        return message;
    },
};
function createBaseCanSendImageResp() {
    return { yes: false };
}
exports.CanSendImageResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.yes === true) {
            writer.uint32(8).bool(message.yes);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCanSendImageResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.yes = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            yes: isSet(object.yes) ? Boolean(object.yes) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.yes !== undefined && (obj.yes = message.yes);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseCanSendImageResp();
        message.yes = (_a = object.yes) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseCanSendRecordReq() {
    return {};
}
exports.CanSendRecordReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCanSendRecordReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseCanSendRecordReq();
        return message;
    },
};
function createBaseCanSendRecordResp() {
    return { yes: false };
}
exports.CanSendRecordResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.yes === true) {
            writer.uint32(8).bool(message.yes);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCanSendRecordResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.yes = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            yes: isSet(object.yes) ? Boolean(object.yes) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.yes !== undefined && (obj.yes = message.yes);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseCanSendRecordResp();
        message.yes = (_a = object.yes) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseGetStatusReq() {
    return {};
}
exports.GetStatusReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetStatusReq();
        return message;
    },
};
function createBaseGetStatusResp() {
    return { online: false, good: false };
}
exports.GetStatusResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.online === true) {
            writer.uint32(8).bool(message.online);
        }
        if (message.good === true) {
            writer.uint32(16).bool(message.good);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.online = reader.bool();
                    break;
                case 2:
                    message.good = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            online: isSet(object.online) ? Boolean(object.online) : false,
            good: isSet(object.good) ? Boolean(object.good) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.online !== undefined && (obj.online = message.online);
        message.good !== undefined && (obj.good = message.good);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetStatusResp();
        message.online = (_a = object.online) !== null && _a !== void 0 ? _a : false;
        message.good = (_b = object.good) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetVersionInfoReq() {
    return {};
}
exports.GetVersionInfoReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVersionInfoReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGetVersionInfoReq();
        return message;
    },
};
function createBaseGetVersionInfoResp() {
    return { appName: "", appVersion: "", protocolVersion: "", extra: {} };
}
exports.GetVersionInfoResp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.appName !== "") {
            writer.uint32(10).string(message.appName);
        }
        if (message.appVersion !== "") {
            writer.uint32(18).string(message.appVersion);
        }
        if (message.protocolVersion !== "") {
            writer.uint32(26).string(message.protocolVersion);
        }
        Object.entries(message.extra).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.GetVersionInfoResp_ExtraEntry.encode({ key: key, value: value }, writer.uint32(34).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVersionInfoResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.appName = reader.string();
                    break;
                case 2:
                    message.appVersion = reader.string();
                    break;
                case 3:
                    message.protocolVersion = reader.string();
                    break;
                case 4:
                    var entry4 = exports.GetVersionInfoResp_ExtraEntry.decode(reader, reader.uint32());
                    if (entry4.value !== undefined) {
                        message.extra[entry4.key] = entry4.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            appName: isSet(object.appName) ? String(object.appName) : "",
            appVersion: isSet(object.appVersion) ? String(object.appVersion) : "",
            protocolVersion: isSet(object.protocolVersion)
                ? String(object.protocolVersion)
                : "",
            extra: isObject(object.extra)
                ? Object.entries(object.extra).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {},
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.appName !== undefined && (obj.appName = message.appName);
        message.appVersion !== undefined && (obj.appVersion = message.appVersion);
        message.protocolVersion !== undefined &&
            (obj.protocolVersion = message.protocolVersion);
        obj.extra = {};
        if (message.extra) {
            Object.entries(message.extra).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.extra[k] = v;
            });
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetVersionInfoResp();
        message.appName = (_a = object.appName) !== null && _a !== void 0 ? _a : "";
        message.appVersion = (_b = object.appVersion) !== null && _b !== void 0 ? _b : "";
        message.protocolVersion = (_c = object.protocolVersion) !== null && _c !== void 0 ? _c : "";
        message.extra = Object.entries((_d = object.extra) !== null && _d !== void 0 ? _d : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        return message;
    },
};
function createBaseGetVersionInfoResp_ExtraEntry() {
    return { key: "", value: "" };
}
exports.GetVersionInfoResp_ExtraEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVersionInfoResp_ExtraEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? String(object.value) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetVersionInfoResp_ExtraEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseSetRestartReq() {
    return { delay: 0 };
}
exports.SetRestartReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.delay !== 0) {
            writer.uint32(8).int32(message.delay);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetRestartReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delay = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            delay: isSet(object.delay) ? Number(object.delay) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.delay !== undefined && (obj.delay = Math.round(message.delay));
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSetRestartReq();
        message.delay = (_a = object.delay) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
function createBaseSetRestartResp() {
    return {};
}
exports.SetRestartResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetRestartResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetRestartResp();
        return message;
    },
};
function createBaseCleanCacheReq() {
    return {};
}
exports.CleanCacheReq = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCleanCacheReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseCleanCacheReq();
        return message;
    },
};
function createBaseCleanCacheResp() {
    return {};
}
exports.CleanCacheResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCleanCacheResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseCleanCacheResp();
        return message;
    },
};
function createBaseSetGroupSignInReq() {
    return { groupId: 0 };
}
exports.SetGroupSignInReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.groupId !== 0) {
            writer.uint32(8).int64(message.groupId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupSignInReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.groupId = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSetGroupSignInReq();
        message.groupId = (_a = object.groupId) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
function createBaseSetGroupSignInResp() {
    return {};
}
exports.SetGroupSignInResp = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSetGroupSignInResp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSetGroupSignInResp();
        return message;
    },
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
