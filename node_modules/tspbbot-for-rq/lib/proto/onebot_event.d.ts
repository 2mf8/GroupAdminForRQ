import * as _m0 from "protobufjs/minimal";
import { Message, MessageReceipt } from "./onebot_base";
export declare const protobufPackage = "onebot";
export interface PrivateMessageEvent {
    time: number;
    selfId: number;
    postType: string;
    messageType: string;
    subType: string;
    /** int32 message_id = 6; // 废弃 */
    userId: number;
    message: Message[];
    rawMessage: string;
    font: number;
    sender: PrivateMessageEvent_Sender | undefined;
    messageId: MessageReceipt | undefined;
    extra: {
        [key: string]: string;
    };
}
export interface PrivateMessageEvent_Sender {
    userId: number;
    nickname: string;
    sex: string;
    age: number;
}
export interface PrivateMessageEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupMessageEvent {
    time: number;
    selfId: number;
    postType: string;
    messageType: string;
    subType: string;
    /** int32 message_id = 6; // 废弃 */
    groupId: number;
    userId: number;
    anonymous: GroupMessageEvent_Anonymous | undefined;
    message: Message[];
    rawMessage: string;
    font: number;
    sender: GroupMessageEvent_Sender | undefined;
    messageId: MessageReceipt | undefined;
    extra: {
        [key: string]: string;
    };
}
export interface GroupMessageEvent_Anonymous {
    id: number;
    name: string;
    flag: string;
}
export interface GroupMessageEvent_Sender {
    userId: number;
    nickname: string;
    card: string;
    sex: string;
    age: number;
    area: string;
    level: string;
    role: string;
    title: string;
}
export interface GroupMessageEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupUploadNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    groupId: number;
    userId: number;
    file: GroupUploadNoticeEvent_File | undefined;
    extra: {
        [key: string]: string;
    };
}
export interface GroupUploadNoticeEvent_File {
    id: string;
    name: string;
    size: number;
    busid: number;
    url: string;
}
export interface GroupUploadNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupAdminNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    subType: string;
    groupId: number;
    userId: number;
    extra: {
        [key: string]: string;
    };
}
export interface GroupAdminNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupDecreaseNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    subType: string;
    groupId: number;
    operatorId: number;
    userId: number;
    extra: {
        [key: string]: string;
    };
}
export interface GroupDecreaseNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupIncreaseNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    subType: string;
    groupId: number;
    operatorId: number;
    userId: number;
    extra: {
        [key: string]: string;
    };
}
export interface GroupIncreaseNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupBanNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    subType: string;
    groupId: number;
    operatorId: number;
    userId: number;
    duration: number;
    extra: {
        [key: string]: string;
    };
}
export interface GroupBanNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface FriendAddNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    userId: number;
    extra: {
        [key: string]: string;
    };
}
export interface FriendAddNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupRecallNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    groupId: number;
    userId: number;
    operatorId: number;
    /** int32 message_id = 8; // 废弃 */
    messageId: MessageReceipt | undefined;
    extra: {
        [key: string]: string;
    };
}
export interface GroupRecallNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface FriendRecallNoticeEvent {
    time: number;
    selfId: number;
    postType: string;
    noticeType: string;
    userId: number;
    /** int32 message_id = 6; // 废弃 */
    messageId: MessageReceipt | undefined;
    extra: {
        [key: string]: string;
    };
}
export interface FriendRecallNoticeEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface FriendRequestEvent {
    time: number;
    selfId: number;
    postType: string;
    requestType: string;
    userId: number;
    comment: string;
    flag: string;
    extra: {
        [key: string]: string;
    };
}
export interface FriendRequestEvent_ExtraEntry {
    key: string;
    value: string;
}
export interface GroupRequestEvent {
    time: number;
    selfId: number;
    postType: string;
    requestType: string;
    subType: string;
    groupId: number;
    userId: number;
    comment: string;
    flag: string;
    extra: {
        [key: string]: string;
    };
}
export interface GroupRequestEvent_ExtraEntry {
    key: string;
    value: string;
}
export declare const PrivateMessageEvent: {
    encode(message: PrivateMessageEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PrivateMessageEvent;
    fromJSON(object: any): PrivateMessageEvent;
    toJSON(message: PrivateMessageEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        messageType?: string | undefined;
        subType?: string | undefined;
        userId?: number | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        rawMessage?: string | undefined;
        font?: number | undefined;
        sender?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
        } | undefined;
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        messageType?: string | undefined;
        subType?: string | undefined;
        userId?: number | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        rawMessage?: string | undefined;
        font?: number | undefined;
        sender?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
        } & Record<Exclude<keyof I["sender"], keyof PrivateMessageEvent_Sender>, never>) | undefined;
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof PrivateMessageEvent>, never>>(object: I): PrivateMessageEvent;
};
export declare const PrivateMessageEvent_Sender: {
    encode(message: PrivateMessageEvent_Sender, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PrivateMessageEvent_Sender;
    fromJSON(object: any): PrivateMessageEvent_Sender;
    toJSON(message: PrivateMessageEvent_Sender): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
    } & Record<Exclude<keyof I, keyof PrivateMessageEvent_Sender>, never>>(object: I): PrivateMessageEvent_Sender;
};
export declare const PrivateMessageEvent_ExtraEntry: {
    encode(message: PrivateMessageEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PrivateMessageEvent_ExtraEntry;
    fromJSON(object: any): PrivateMessageEvent_ExtraEntry;
    toJSON(message: PrivateMessageEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof PrivateMessageEvent_ExtraEntry>, never>>(object: I): PrivateMessageEvent_ExtraEntry;
};
export declare const GroupMessageEvent: {
    encode(message: GroupMessageEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupMessageEvent;
    fromJSON(object: any): GroupMessageEvent;
    toJSON(message: GroupMessageEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        messageType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        anonymous?: {
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } | undefined;
        message?: {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        rawMessage?: string | undefined;
        font?: number | undefined;
        sender?: {
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } | undefined;
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        messageType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        anonymous?: ({
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } & {
            id?: number | undefined;
            name?: string | undefined;
            flag?: string | undefined;
        } & Record<Exclude<keyof I["anonymous"], keyof GroupMessageEvent_Anonymous>, never>) | undefined;
        message?: ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            type?: string | undefined;
            data?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["message"][number]["data"], string | number>, never>) | undefined;
        } & Record<Exclude<keyof I["message"][number], keyof Message>, never>)[] & Record<Exclude<keyof I["message"], keyof {
            type?: string | undefined;
            data?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
        rawMessage?: string | undefined;
        font?: number | undefined;
        sender?: ({
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } & {
            userId?: number | undefined;
            nickname?: string | undefined;
            card?: string | undefined;
            sex?: string | undefined;
            age?: number | undefined;
            area?: string | undefined;
            level?: string | undefined;
            role?: string | undefined;
            title?: string | undefined;
        } & Record<Exclude<keyof I["sender"], keyof GroupMessageEvent_Sender>, never>) | undefined;
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupMessageEvent>, never>>(object: I): GroupMessageEvent;
};
export declare const GroupMessageEvent_Anonymous: {
    encode(message: GroupMessageEvent_Anonymous, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupMessageEvent_Anonymous;
    fromJSON(object: any): GroupMessageEvent_Anonymous;
    toJSON(message: GroupMessageEvent_Anonymous): unknown;
    fromPartial<I extends {
        id?: number | undefined;
        name?: string | undefined;
        flag?: string | undefined;
    } & {
        id?: number | undefined;
        name?: string | undefined;
        flag?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupMessageEvent_Anonymous>, never>>(object: I): GroupMessageEvent_Anonymous;
};
export declare const GroupMessageEvent_Sender: {
    encode(message: GroupMessageEvent_Sender, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupMessageEvent_Sender;
    fromJSON(object: any): GroupMessageEvent_Sender;
    toJSON(message: GroupMessageEvent_Sender): unknown;
    fromPartial<I extends {
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        level?: string | undefined;
        role?: string | undefined;
        title?: string | undefined;
    } & {
        userId?: number | undefined;
        nickname?: string | undefined;
        card?: string | undefined;
        sex?: string | undefined;
        age?: number | undefined;
        area?: string | undefined;
        level?: string | undefined;
        role?: string | undefined;
        title?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupMessageEvent_Sender>, never>>(object: I): GroupMessageEvent_Sender;
};
export declare const GroupMessageEvent_ExtraEntry: {
    encode(message: GroupMessageEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupMessageEvent_ExtraEntry;
    fromJSON(object: any): GroupMessageEvent_ExtraEntry;
    toJSON(message: GroupMessageEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupMessageEvent_ExtraEntry>, never>>(object: I): GroupMessageEvent_ExtraEntry;
};
export declare const GroupUploadNoticeEvent: {
    encode(message: GroupUploadNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupUploadNoticeEvent;
    fromJSON(object: any): GroupUploadNoticeEvent;
    toJSON(message: GroupUploadNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        file?: {
            id?: string | undefined;
            name?: string | undefined;
            size?: number | undefined;
            busid?: number | undefined;
            url?: string | undefined;
        } | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        file?: ({
            id?: string | undefined;
            name?: string | undefined;
            size?: number | undefined;
            busid?: number | undefined;
            url?: string | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            size?: number | undefined;
            busid?: number | undefined;
            url?: string | undefined;
        } & Record<Exclude<keyof I["file"], keyof GroupUploadNoticeEvent_File>, never>) | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupUploadNoticeEvent>, never>>(object: I): GroupUploadNoticeEvent;
};
export declare const GroupUploadNoticeEvent_File: {
    encode(message: GroupUploadNoticeEvent_File, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupUploadNoticeEvent_File;
    fromJSON(object: any): GroupUploadNoticeEvent_File;
    toJSON(message: GroupUploadNoticeEvent_File): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        name?: string | undefined;
        size?: number | undefined;
        busid?: number | undefined;
        url?: string | undefined;
    } & {
        id?: string | undefined;
        name?: string | undefined;
        size?: number | undefined;
        busid?: number | undefined;
        url?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupUploadNoticeEvent_File>, never>>(object: I): GroupUploadNoticeEvent_File;
};
export declare const GroupUploadNoticeEvent_ExtraEntry: {
    encode(message: GroupUploadNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupUploadNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupUploadNoticeEvent_ExtraEntry;
    toJSON(message: GroupUploadNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupUploadNoticeEvent_ExtraEntry>, never>>(object: I): GroupUploadNoticeEvent_ExtraEntry;
};
export declare const GroupAdminNoticeEvent: {
    encode(message: GroupAdminNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupAdminNoticeEvent;
    fromJSON(object: any): GroupAdminNoticeEvent;
    toJSON(message: GroupAdminNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupAdminNoticeEvent>, never>>(object: I): GroupAdminNoticeEvent;
};
export declare const GroupAdminNoticeEvent_ExtraEntry: {
    encode(message: GroupAdminNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupAdminNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupAdminNoticeEvent_ExtraEntry;
    toJSON(message: GroupAdminNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupAdminNoticeEvent_ExtraEntry>, never>>(object: I): GroupAdminNoticeEvent_ExtraEntry;
};
export declare const GroupDecreaseNoticeEvent: {
    encode(message: GroupDecreaseNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupDecreaseNoticeEvent;
    fromJSON(object: any): GroupDecreaseNoticeEvent;
    toJSON(message: GroupDecreaseNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupDecreaseNoticeEvent>, never>>(object: I): GroupDecreaseNoticeEvent;
};
export declare const GroupDecreaseNoticeEvent_ExtraEntry: {
    encode(message: GroupDecreaseNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupDecreaseNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupDecreaseNoticeEvent_ExtraEntry;
    toJSON(message: GroupDecreaseNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupDecreaseNoticeEvent_ExtraEntry>, never>>(object: I): GroupDecreaseNoticeEvent_ExtraEntry;
};
export declare const GroupIncreaseNoticeEvent: {
    encode(message: GroupIncreaseNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupIncreaseNoticeEvent;
    fromJSON(object: any): GroupIncreaseNoticeEvent;
    toJSON(message: GroupIncreaseNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupIncreaseNoticeEvent>, never>>(object: I): GroupIncreaseNoticeEvent;
};
export declare const GroupIncreaseNoticeEvent_ExtraEntry: {
    encode(message: GroupIncreaseNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupIncreaseNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupIncreaseNoticeEvent_ExtraEntry;
    toJSON(message: GroupIncreaseNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupIncreaseNoticeEvent_ExtraEntry>, never>>(object: I): GroupIncreaseNoticeEvent_ExtraEntry;
};
export declare const GroupBanNoticeEvent: {
    encode(message: GroupBanNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupBanNoticeEvent;
    fromJSON(object: any): GroupBanNoticeEvent;
    toJSON(message: GroupBanNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        duration?: number | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        operatorId?: number | undefined;
        userId?: number | undefined;
        duration?: number | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupBanNoticeEvent>, never>>(object: I): GroupBanNoticeEvent;
};
export declare const GroupBanNoticeEvent_ExtraEntry: {
    encode(message: GroupBanNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupBanNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupBanNoticeEvent_ExtraEntry;
    toJSON(message: GroupBanNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupBanNoticeEvent_ExtraEntry>, never>>(object: I): GroupBanNoticeEvent_ExtraEntry;
};
export declare const FriendAddNoticeEvent: {
    encode(message: FriendAddNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendAddNoticeEvent;
    fromJSON(object: any): FriendAddNoticeEvent;
    toJSON(message: FriendAddNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        userId?: number | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        userId?: number | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof FriendAddNoticeEvent>, never>>(object: I): FriendAddNoticeEvent;
};
export declare const FriendAddNoticeEvent_ExtraEntry: {
    encode(message: FriendAddNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendAddNoticeEvent_ExtraEntry;
    fromJSON(object: any): FriendAddNoticeEvent_ExtraEntry;
    toJSON(message: FriendAddNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof FriendAddNoticeEvent_ExtraEntry>, never>>(object: I): FriendAddNoticeEvent_ExtraEntry;
};
export declare const GroupRecallNoticeEvent: {
    encode(message: GroupRecallNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupRecallNoticeEvent;
    fromJSON(object: any): GroupRecallNoticeEvent;
    toJSON(message: GroupRecallNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        operatorId?: number | undefined;
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        operatorId?: number | undefined;
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupRecallNoticeEvent>, never>>(object: I): GroupRecallNoticeEvent;
};
export declare const GroupRecallNoticeEvent_ExtraEntry: {
    encode(message: GroupRecallNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupRecallNoticeEvent_ExtraEntry;
    fromJSON(object: any): GroupRecallNoticeEvent_ExtraEntry;
    toJSON(message: GroupRecallNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupRecallNoticeEvent_ExtraEntry>, never>>(object: I): GroupRecallNoticeEvent_ExtraEntry;
};
export declare const FriendRecallNoticeEvent: {
    encode(message: FriendRecallNoticeEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendRecallNoticeEvent;
    fromJSON(object: any): FriendRecallNoticeEvent;
    toJSON(message: FriendRecallNoticeEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        userId?: number | undefined;
        messageId?: {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        noticeType?: string | undefined;
        userId?: number | undefined;
        messageId?: ({
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: number[] | undefined;
            rands?: number[] | undefined;
            groupId?: number | undefined;
        } & {
            senderId?: number | undefined;
            time?: number | undefined;
            seqs?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["seqs"], keyof number[]>, never>) | undefined;
            rands?: (number[] & number[] & Record<Exclude<keyof I["messageId"]["rands"], keyof number[]>, never>) | undefined;
            groupId?: number | undefined;
        } & Record<Exclude<keyof I["messageId"], keyof MessageReceipt>, never>) | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof FriendRecallNoticeEvent>, never>>(object: I): FriendRecallNoticeEvent;
};
export declare const FriendRecallNoticeEvent_ExtraEntry: {
    encode(message: FriendRecallNoticeEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendRecallNoticeEvent_ExtraEntry;
    fromJSON(object: any): FriendRecallNoticeEvent_ExtraEntry;
    toJSON(message: FriendRecallNoticeEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof FriendRecallNoticeEvent_ExtraEntry>, never>>(object: I): FriendRecallNoticeEvent_ExtraEntry;
};
export declare const FriendRequestEvent: {
    encode(message: FriendRequestEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendRequestEvent;
    fromJSON(object: any): FriendRequestEvent;
    toJSON(message: FriendRequestEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        requestType?: string | undefined;
        userId?: number | undefined;
        comment?: string | undefined;
        flag?: string | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        requestType?: string | undefined;
        userId?: number | undefined;
        comment?: string | undefined;
        flag?: string | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof FriendRequestEvent>, never>>(object: I): FriendRequestEvent;
};
export declare const FriendRequestEvent_ExtraEntry: {
    encode(message: FriendRequestEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FriendRequestEvent_ExtraEntry;
    fromJSON(object: any): FriendRequestEvent_ExtraEntry;
    toJSON(message: FriendRequestEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof FriendRequestEvent_ExtraEntry>, never>>(object: I): FriendRequestEvent_ExtraEntry;
};
export declare const GroupRequestEvent: {
    encode(message: GroupRequestEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupRequestEvent;
    fromJSON(object: any): GroupRequestEvent;
    toJSON(message: GroupRequestEvent): unknown;
    fromPartial<I extends {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        requestType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        comment?: string | undefined;
        flag?: string | undefined;
        extra?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        time?: number | undefined;
        selfId?: number | undefined;
        postType?: string | undefined;
        requestType?: string | undefined;
        subType?: string | undefined;
        groupId?: number | undefined;
        userId?: number | undefined;
        comment?: string | undefined;
        flag?: string | undefined;
        extra?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["extra"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GroupRequestEvent>, never>>(object: I): GroupRequestEvent;
};
export declare const GroupRequestEvent_ExtraEntry: {
    encode(message: GroupRequestEvent_ExtraEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GroupRequestEvent_ExtraEntry;
    fromJSON(object: any): GroupRequestEvent_ExtraEntry;
    toJSON(message: GroupRequestEvent_ExtraEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GroupRequestEvent_ExtraEntry>, never>>(object: I): GroupRequestEvent_ExtraEntry;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
