"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageReceipt = exports.Message_DataEntry = exports.Message = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "onebot";
function createBaseMessage() {
    return { type: "", data: {} };
}
exports.Message = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.type !== "") {
            writer.uint32(10).string(message.type);
        }
        Object.entries(message.data).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Message_DataEntry.encode({ key: key, value: value }, writer.uint32(18).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMessage();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.type = reader.string();
                    break;
                case 2:
                    var entry2 = exports.Message_DataEntry.decode(reader, reader.uint32());
                    if (entry2.value !== undefined) {
                        message.data[entry2.key] = entry2.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            type: isSet(object.type) ? String(object.type) : "",
            data: isObject(object.data)
                ? Object.entries(object.data).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {},
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.type !== undefined && (obj.type = message.type);
        obj.data = {};
        if (message.data) {
            Object.entries(message.data).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.data[k] = v;
            });
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseMessage();
        message.type = (_a = object.type) !== null && _a !== void 0 ? _a : "";
        message.data = Object.entries((_b = object.data) !== null && _b !== void 0 ? _b : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        return message;
    },
};
function createBaseMessage_DataEntry() {
    return { key: "", value: "" };
}
exports.Message_DataEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMessage_DataEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? String(object.value) : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseMessage_DataEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseMessageReceipt() {
    return { senderId: 0, time: 0, seqs: [], rands: [], groupId: 0 };
}
exports.MessageReceipt = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.senderId !== 0) {
            writer.uint32(8).int64(message.senderId);
        }
        if (message.time !== 0) {
            writer.uint32(16).int64(message.time);
        }
        writer.uint32(26).fork();
        for (var _i = 0, _a = message.seqs; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.int32(v);
        }
        writer.ldelim();
        writer.uint32(34).fork();
        for (var _b = 0, _c = message.rands; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.int32(v);
        }
        writer.ldelim();
        if (message.groupId !== 0) {
            writer.uint32(40).int64(message.groupId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMessageReceipt();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.senderId = longToNumber(reader.int64());
                    break;
                case 2:
                    message.time = longToNumber(reader.int64());
                    break;
                case 3:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.seqs.push(reader.int32());
                        }
                    }
                    else {
                        message.seqs.push(reader.int32());
                    }
                    break;
                case 4:
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.rands.push(reader.int32());
                        }
                    }
                    else {
                        message.rands.push(reader.int32());
                    }
                    break;
                case 5:
                    message.groupId = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            senderId: isSet(object.senderId) ? Number(object.senderId) : 0,
            time: isSet(object.time) ? Number(object.time) : 0,
            seqs: Array.isArray(object === null || object === void 0 ? void 0 : object.seqs)
                ? object.seqs.map(function (e) { return Number(e); })
                : [],
            rands: Array.isArray(object === null || object === void 0 ? void 0 : object.rands)
                ? object.rands.map(function (e) { return Number(e); })
                : [],
            groupId: isSet(object.groupId) ? Number(object.groupId) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.senderId !== undefined &&
            (obj.senderId = Math.round(message.senderId));
        message.time !== undefined && (obj.time = Math.round(message.time));
        if (message.seqs) {
            obj.seqs = message.seqs.map(function (e) { return Math.round(e); });
        }
        else {
            obj.seqs = [];
        }
        if (message.rands) {
            obj.rands = message.rands.map(function (e) { return Math.round(e); });
        }
        else {
            obj.rands = [];
        }
        message.groupId !== undefined &&
            (obj.groupId = Math.round(message.groupId));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseMessageReceipt();
        message.senderId = (_a = object.senderId) !== null && _a !== void 0 ? _a : 0;
        message.time = (_b = object.time) !== null && _b !== void 0 ? _b : 0;
        message.seqs = ((_c = object.seqs) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.rands = ((_d = object.rands) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.groupId = (_e = object.groupId) !== null && _e !== void 0 ? _e : 0;
        return message;
    },
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
